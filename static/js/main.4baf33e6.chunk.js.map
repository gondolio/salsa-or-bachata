{"version":3,"sources":["locales/cnTranslations.js","i18n.js","locales/enTranslations.js","locales/esTranslations.js","locales/heTranslations.js","locales/jpTranslations.js","components/StartScreen.jsx","components/SpotifyPlayButton.jsx","config/Songs.js","config/Genres.js","util/GenreUtils.js","components/PlayScreen.jsx","components/GameOverScreen.jsx","components/OptionsModal.jsx","components/LanguageSelector.jsx","components/ScoreBoard.jsx","components/Game.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["zhhkTranslations","Salsa","Bachata","Merengue","Kizomba","Reggaeton","scoreBoardCorrect","scoreBoardIncorrect","Options","Done","correct","wrong","answerFeedback","zhtwTranslations","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translations","es","he","jp","fallbackLng","debug","whitelist","ns","defaultNS","keySeparator","interpolation","escapeValue","StartScreen","handleGameState","t","useTranslation","Container","Row","Col","Button","color","size","onClick","SpotifyPlayButton","spotifyUri","tiny","src","width","height","frameBorder","allow","title","defaultProps","Songs","salsa","bachata","merengue","kizomba","reggaeton","GenreMasterConfig","order","enabled","genreButtonStyle","marginBottom","borderRadius","genreColor","genre","_","get","genreOrder","Number","MAX_SAFE_INTEGER","sortedGenres","keys","sort","a","b","PlayScreen","props","useState","setSpotifyUri","setGenre","isLoaded","setIsLoaded","buttons","enabledGenres","map","enabledGenre","key","style","Genres","answer","newPlayerWon","newLastGenre","newLastSpotifyUri","startCase","ButtonGroup","vertical","answerButtons","chosenGenre","sample","chosenSpotifyUri","uniq","initializeGenre","GameOverScreen","outputMessage","buttonColor","playerWon","lastGenre","lastSpotifyUri","lastGenreName","lastGenreMessage","marginTop","OptionsModal","isModalOpen","setIsModalOpen","genreIsEnabled","genreButtonIsEnabled","setGenreButtonIsEnabled","toggleModal","handleSubmit","setGenreIsEnabled","handleOptionButtonClick","newGenreButtonIsEnabled","includes","Modal","isOpen","centered","toggle","onClosed","className","onSubmit","ModalHeader","ModalBody","fluid","outline","optionButtons","ModalFooter","languageCodesToNames","LanguageCodeToName","languageCode","lookupCode","LanguageSelector","options","currentLanguage","language","dropDownItems","DropdownItem","changeLanguage","UncontrolledButtonDropdown","DropdownToggle","caret","DropdownMenu","ScoreBoard","correctCount","incorrectCount","md","Game","gameState","setGameState","setPlayerWon","mapValues","setLastSpotifyUri","setLastGenre","useRef","newGameState","pickBy","identity","JSON","stringify","current","console","log","Main","ReactGA","initialize","pageview","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gTA6BaA,EAAmB,CAE9BC,MAAO,eACPC,QAAS,qBACTC,SAAU,qBACVC,QAAS,qBACTC,UAAW,qBACXC,kBAAmB,SACnBC,oBAAqB,SAGrB,oBAAqB,8CACrB,QAAS,gBAGTC,QAAS,eACT,gBAAiB,2BACjBC,KAAM,eAGNC,QAAS,mBACTC,MAAO,kBACPC,eAAgB,gCAChB,cAAe,gBAGf,gCAAiC,qDAGtBC,EAAmBb,ECjDhCc,IACGC,IAAIC,KACJD,IAAIE,KACJC,KAAK,CACJC,UAAW,CACTC,GAAI,CACFC,aCfO,CAEbpB,MAAO,QACPC,QAAS,UACTC,SAAU,WACVC,QAAS,UACTC,UAAW,YACXC,kBAAmB,UACnBC,oBAAqB,YAGrB,oBAAqB,oBACrB,QAAS,QAGTC,QAAS,UACT,gBAAiB,gBACjBC,KAAM,OAGNC,QAAS,cACTC,MAAO,WACPC,eAAgB,4BAChB,cAAe,cAGf,gCAAiC,kCDT7BU,GAAI,CACFD,aElBO,CAEbpB,MAAO,QACPC,QAAS,UACTC,SAAU,WACVC,QAAS,UACTC,UAAW,eACXC,kBAAmB,WACnBC,oBAAqB,aAGrB,oBAAqB,mBACrB,QAAS,SAGTC,QAAS,WACT,gBAAiB,oBACjBC,KAAM,QAGNC,QAAS,mBACTC,MAAO,gBACPC,eAAgB,mCAChB,cAAe,YAGf,gCAAiC,sDFN7BW,GAAI,CACFF,aGrBO,CAEbpB,MAAO,2BACPC,QAAS,kCACTC,SAAU,iCACVC,QAAS,6CACTC,UAAW,uCACXC,kBAAmB,2BACnBC,oBAAqB,wCAGrB,oBAAqB,yEACrB,QAAS,sBAGTC,QAAS,mDACT,gBAAiB,2DACjBC,KAAM,2BAGNC,QAAS,+BACTC,MAAO,4CACPC,eAAgB,iEAChB,cAAe,yCAGf,gCAAiC,0GHH7BY,GAAI,CACFH,aIxBO,CAEbpB,MAAO,qBACPC,QAAS,iCACTC,SAAU,2BACVC,QAAS,2BACTC,UAAW,2BACXC,kBAAmB,KACnBC,oBAAqB,KAGrB,oBAAqB,2EACrB,QAAS,gBAGTC,QAAS,iCACT,gBAAiB,6CACjBC,KAAM,2BAGNC,QAAS,yDACTC,MAAO,2DACPC,eAAgB,4CAChB,cAAe,4BAGf,gCAAiC,iHJA7B,QAAS,CACPS,aD3BwB,CAE9BpB,MAAO,eACPC,QAAS,qBACTC,SAAU,qBACVC,QAAS,qBACTC,UAAW,qBACXC,kBAAmB,SACnBC,oBAAqB,SAGrB,oBAAqB,8CACrB,QAAS,gBAGTC,QAAS,eACT,gBAAiB,2BACjBC,KAAM,eAGNC,QAAS,mBACTC,MAAO,kBACPC,eAAgB,gCAChB,cAAe,gBAGf,gCAAiC,sDCG7B,QAAS,CACPS,aAAcrB,GAEhB,QAAS,CACPqB,aAAcR,IAGlBY,YAAa,KACbC,OAAO,EAIPC,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,QAAS,QAAS,SAG5DC,GAAI,CAAC,gBACLC,UAAW,eAEXC,cAAc,EAEdC,cAAe,CACbC,aAAa,KAIJlB,EAAf,EAAeA,I,gEKpBAmB,MAvBf,YAA2C,IAApBC,EAAmB,EAAnBA,gBACbC,EAAMC,cAAND,EAER,OACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BAAKJ,EAAE,wBAGX,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,KAAK,KAAKC,QAAS,kBAAMT,EAAgB,aAAaC,EAAE,c,QCpB1F,SAASS,EAAT,GAAkD,IAArBC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,KACvC,OACE,4BACEC,IAAG,+CAA0CF,GAC7CG,MAAOF,EAAO,KAAO,MACrBG,OAAO,KACPC,YAAY,IACZC,MAAM,kBACNC,MAAM,+BAUZR,EAAkBS,aAAe,CAC/BP,MAAM,GAGOF,QC0WAU,EAnYD,CACZC,MAAO,CAEL,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBAGA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,0BAEFC,QAAS,CAEP,yBACA,yBACA,yBACA,yBACA,yBACA,yBAGA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,0BAEFC,SAAU,CAER,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,0BAEFC,QAAS,CAGP,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBAGA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBAGA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,0BAEFC,UAAW,CAET,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,2BCnWWC,EA5BW,CACxBL,MAAO,CACLd,MAAO,MACPoB,MAAO,EACPC,SAAS,GAEXN,QAAS,CACPf,MAAO,SACPoB,MAAO,EACPC,SAAS,GAEXL,SAAU,CACRhB,MAAO,QACPoB,MAAO,EACPC,SAAS,GAEXJ,QAAS,CACPjB,MAAO,SACPoB,MAAO,EACPC,SAAS,GAEXH,UAAW,CACTlB,MAAO,OACPoB,MAAO,EACPC,SAAS,ICpBAC,EAAmB,CAE9BC,aAAc,OACdC,aAAc,QAGT,SAASC,EAAWC,GACzB,OAAOC,IAAEC,IAAIT,EAAmB,CAACO,EAAO,SAAU,aAG7C,SAASG,EAAWH,GACzB,OAAOC,IAAEC,IAAIT,EAAmB,CAACO,EAAO,SAAUI,OAAOC,kBAGpD,SAASC,IACd,OAD+D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","file":"static/js/main.4baf33e6.chunk.js","sourcesContent":["export const zhcnTranslations = {\n  // Common\n  Salsa: '莎莎',\n  Bachata: '巴恰塔',\n  Merengue: '梅伦格',\n  Kizomba: '基宗巴',\n  Reggaeton: '雷鬼冻',\n  scoreBoardCorrect: '对',\n  scoreBoardIncorrect: '错',\n\n  // StartScreen\n  'Salsa or Bachata?': '莎莎还是巴恰塔?',\n  'Play!': '开始!',\n\n  // OptionsModal\n  Options: '选项',\n  'Choose Genres': '选择类型',\n  Done: '完成',\n\n  // GameOverScreen\n  correct: '没错 :D!',\n  wrong: '错了 :(',\n  answerFeedback: '(是{{genre}}的歌)',\n  'Play Again!': '再玩!',\n\n  // PlayScreen\n  'What type of song is playing?': '这是什么类型的歌?',\n};\n\nexport const zhhkTranslations = {\n  // Common\n  Salsa: '莎莎',\n  Bachata: '巴恰塔',\n  Merengue: '梅倫格',\n  Kizomba: '基宗巴',\n  Reggaeton: '雷鬼凍',\n  scoreBoardCorrect: '對',\n  scoreBoardIncorrect: '錯',\n\n  // StartScreen\n  'Salsa or Bachata?': '莎莎還是巴恰塔?',\n  'Play!': '開始!',\n\n  // OptionsModal\n  Options: '選項',\n  'Choose Genres': '選擇類型',\n  Done: '完成',\n\n  // GameOverScreen\n  correct: '沒錯 :D!',\n  wrong: '錯了 :(',\n  answerFeedback: '(是{{genre}}的歌)',\n  'Play Again!': '再玩!',\n\n  // PlayScreen\n  'What type of song is playing?': '這是什麼類型的歌?',\n};\n\nexport const zhtwTranslations = zhhkTranslations;\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport enTranslations from './locales/enTranslations';\nimport esTranslations from './locales/esTranslations';\nimport heTranslations from './locales/heTranslations';\nimport jpTranslations from './locales/jpTranslations';\nimport { zhcnTranslations, zhhkTranslations, zhtwTranslations } from './locales/cnTranslations';\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translations: enTranslations,\n      },\n      es: {\n        translations: esTranslations,\n      },\n      he: {\n        translations: heTranslations,\n      },\n      jp: {\n        translations: jpTranslations,\n      },\n      'zh-CN': {\n        translations: zhcnTranslations,\n      },\n      'zh-HK': {\n        translations: zhhkTranslations,\n      },\n      'zh-TW': {\n        translations: zhtwTranslations,\n      },\n    },\n    fallbackLng: 'en',\n    debug: true,\n\n    // Putting whitelist so only get language (e.g. 'en' instead of 'en-US')\n    // Not using load: 'languageOnly' because still want to differentiate zh-CN vs zh-HK/zh-TW\n    whitelist: ['en', 'es', 'he', 'jp', 'zh', 'zh-CN', 'zh-HK', 'zh-TW'],\n\n    // have a common namespace used around the full app\n    ns: ['translations'],\n    defaultNS: 'translations',\n\n    keySeparator: false, // we use content as keys\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","export default {\n  // Common\n  Salsa: 'Salsa',\n  Bachata: 'Bachata',\n  Merengue: 'Merengue',\n  Kizomba: 'Kizomba',\n  Reggaeton: 'Reggaeton',\n  scoreBoardCorrect: 'Correct',\n  scoreBoardIncorrect: 'Incorrect',\n\n  // StartScreen\n  'Salsa or Bachata?': 'Salsa or Bachata?',\n  'Play!': 'Play!',\n\n  // OptionsModal\n  Options: 'Options',\n  'Choose Genres': 'Choose Genres',\n  Done: 'Done',\n\n  // GameOverScreen\n  correct: 'Correct! :D',\n  wrong: 'Wrong :(',\n  answerFeedback: '(It was a {{genre}} song)',\n  'Play Again!': 'Play Again!',\n\n  // PlayScreen\n  'What type of song is playing?': 'What type of song is playing?',\n};\n","export default {\n  // Common\n  Salsa: 'Salsa',\n  Bachata: 'Bachata',\n  Merengue: 'Merengue',\n  Kizomba: 'Kizomba',\n  Reggaeton: 'Reggaetón',\n  scoreBoardCorrect: 'Correcto',\n  scoreBoardIncorrect: 'Incorrecto',\n\n  // StartScreen\n  'Salsa or Bachata?': 'Salsa o Bachata?',\n  'Play!': 'Jugar!',\n\n  // OptionsModal\n  Options: 'Opciones',\n  'Choose Genres': 'Eligir Géneros',\n  Done: 'Listo',\n\n  // GameOverScreen\n  correct: '¡Correcto :D!',\n  wrong: 'Incorrecto :(',\n  answerFeedback: '(Fue un canción de {{genre}})',\n  'Play Again!': 'Otra Vez!',\n\n  // PlayScreen\n  'What type of song is playing?': '¿Qué tipo de canción se está tocando?',\n};\n","export default {\n  // Common\n  Salsa: 'סלסה',\n  Bachata: \"בצ'אטה\",\n  Merengue: 'מרנגה',\n  Kizomba: 'קיזומבה',\n  Reggaeton: 'רגאטון',\n  scoreBoardCorrect: 'נכון',\n  scoreBoardIncorrect: 'לא נכון',\n\n  // StartScreen\n  'Salsa or Bachata?': \"?סלסה או באצ'תה\",\n  'Play!': '!שחק',\n\n  // OptionsModal\n  Options: 'אפשרויות',\n  'Choose Genres': \"בחר ז'אנרים\",\n  Done: 'סיום',\n\n  // GameOverScreen\n  correct: '(: !נכון',\n  wrong: '): !לא נכון',\n  answerFeedback: '(זה היה שיר {{genre}})',\n  'Play Again!': '!שחק שוב',\n\n  // PlayScreen\n  'What type of song is playing?': '?איזה סוג של שיר מנגן',\n};\n","export default {\n  // Common\n  Salsa: 'サルサ',\n  Bachata: 'バチャータ',\n  Merengue: 'メレンゲ',\n  Kizomba: 'キゾンバ',\n  Reggaeton: 'レゲトン',\n  scoreBoardCorrect: 'OK',\n  scoreBoardIncorrect: 'NG',\n\n  // StartScreen\n  'Salsa or Bachata?': 'サルサか、バチャータか？',\n  'Play!': '遊ぶ!',\n\n  // OptionsModal\n  Options: 'オプション',\n  'Choose Genres': 'ジャンルを選ぶ',\n  Done: 'オッケー',\n\n  // GameOverScreen\n  correct: 'あった！（╹◡╹）',\n  wrong: 'あってない　(◞‸◟)',\n  answerFeedback: '({{genre}}の曲でした)',\n  'Play Again!': 'もう一度!',\n\n  // PlayScreen\n  'What type of song is playing?': 'どんなジャンルの曲が流れていますか？',\n};\n","import React from 'react';\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\n\nfunction StartScreen({ handleGameState }) {\n  const { t } = useTranslation();\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h2>{t('Salsa or Bachata?')}</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button color=\"primary\" size=\"lg\" onClick={() => handleGameState('playing')}>{t('Play!')}</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nStartScreen.propTypes = {\n  handleGameState: PropTypes.func.isRequired,\n};\n\nexport default StartScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SpotifyPlayButton({ spotifyUri, tiny }) {\n  return (\n    <iframe\n      src={`https://open.spotify.com/embed/track/${spotifyUri}`}\n      width={tiny ? '80' : '300'}\n      height=\"80\"\n      frameBorder=\"0\"\n      allow=\"encrypted-media\"\n      title=\"I am a Spotify play button\"\n    />\n  );\n}\n\nSpotifyPlayButton.propTypes = {\n  spotifyUri: PropTypes.string.isRequired,\n  tiny: PropTypes.bool,\n};\n\nSpotifyPlayButton.defaultProps = {\n  tiny: false,\n};\n\nexport default SpotifyPlayButton;\n","const Songs = {\n  salsa: [\n    // Oren's songs from https://open.spotify.com/user/orenso/playlist/5ahnssobNZ1j6js1XtEcfa?si=yRKm0EyqQnqEOiZpqOY9xA\n    '11i880AC0EIX8azPooV52r',\n    '7ilVeP52B7yBCOz4fPQMVE',\n    '5M830cD7MNeiiwIGHzH9TV',\n    '4aWmUDTfIPGksMNLV2rQP2',\n    '1yM7GIEJ2QniupkEHOyp0a',\n    '3dE0LmLCkCUyMa51GCwAOv',\n    '3fucYASejkSMwtAYjFRKlF',\n    '0n2SEXB2qoRQg171q7XqeW',\n    '50ie858tDK1UM2hhB60A3W',\n    '69kOkLUCkxIZYexIgSG8rq',\n    '4iImxqMlF3CeNRwKKua9jn',\n    '1Oex59PRSZtOqRHEPpf8h0',\n    '5lQCYm9wTxbRgvrNNwN9xu',\n    '3VtxQCEOnJ8Ge65CdQwvsa',\n    '6e41VqRGWZGvCKtJ5roSEx',\n    '5c03MWAT1BmzF8bcEssWgn',\n    '1nZziTuPRwCfJe1XvVC760',\n    '0KVP7acJXaxGx10hutXpui',\n    '23Fw0qh3Onqn2276LiL2pT',\n    '13zhZuedpA05BxrInLtfbo',\n    '1IcnHHfeAkdc88LybFWwb9',\n    '0vUctBW4so39hS6IZ7ibKw',\n    '23Vb5teQKNSNvPgUjLtI8j',\n    '14AzRctwIdAs8xTZkfcpko',\n\n    // Songs from https://open.spotify.com/user/spotify/playlist/37i9dQZF1DX4qKWGR9z0LI?si=Cd6MkmfST1Opy7JJRzIHOA\n    '5E7tWGNU9baL3BODJmApsV',\n    '3c5PYEQmBkxqxsb0xMsRnk',\n    '15LaR0cTTGwM9D6Q02ay2L',\n    '5OYAkymF4NECxYhNIero4j',\n    '7F6O4IJtrHNBdKFpcHwMJg',\n    '60VVaKgIJNftR2UWkLIYah',\n    '1MZGLqbtT6BQs3OM7R92UY',\n    '0amRhMUb9wYrDOmSD938AQ',\n    '23Vb5teQKNSNvPgUjLtI8j',\n    '3bpqoOSDwdaK003DPMvDJQ',\n    '4YGSpi9g7ohPFO8TXpvSUZ',\n    '3SXWtn3YbXOuz6s9LN8LeJ',\n    '1m3paVx65imhvCjPx505Oy',\n    '00Ro1lnV3V6i87aY4t8Q43',\n    '383hkMdmA976zOTKRm6PLy',\n    '2soM5TyZ2c98CDMvXljT7a',\n    '6QJ1F9DrlsRSmKDcdVS0Oy',\n    '58unXNsISeHfI2jdqm9nb9',\n    '3WXfQDsASfXrSojk9WB3aR',\n    '6UGYIgkzeLp4BQy30B9svV',\n    '0gVmUkRX09cY5uNPSI74JC',\n    '4nYuL6R1SuWAOJRwAWasct',\n    '4Ih0JljQ3X3PbHfmuk05PR',\n    '6F3YJ3vWzatHA3nz6GwDoA',\n    '2fhcGmlZZ0j3oAKTaiuk91',\n    '1XuSve6t0vLCm8MG7CZJOA',\n    '5y37hGmb0LU3YiZRlFJGUR',\n    '05K2YWeCYYBgPWFj8TT4uK',\n    '4OQrHFhoNSDxSFitx9KCbx',\n    '0yp6jw6F0LNnjbxLejWaPK',\n    '3yEtuhGR8jOtusa29jWrhG',\n    '1N3G6QQfF0579fHoFQmMzi',\n    '0C279YvVWJcmFMSDtqIGfq',\n    '2kBgJXGbVA6WcA40IFA9KF',\n    '6bum69IXoiGcZCb83ZtfGA',\n    '5p3xpIxdICGLWvjI5FEPng',\n    '5bkWgrKyNhMcriQP3CrHEA',\n    '7nDIflSHQXzaa8zupxwv3U',\n    '286NP8kXWzx2uHb5tr7TGv',\n    '4pUmQqaZklcCOB3rFdWc7g',\n    '2h6WIOkTPvHSAD7vR6lMSS',\n    '3fRIuTih8bzc0vtY9fHhvF',\n    '5YfqVqJwjxiyhxvofbCnHp',\n    '39cz1Ua6M1YFAjxKxipgOK',\n    '6sna5KCgNbt1ciZtVJCjzx',\n    '2vHNqDJe1qvt1sroQfNHSI',\n    '6Mo9TgSE7iKBNSoIdLaP40',\n    '14XQClWbLwmDywY9wVaDiG',\n    '5B0M2VaOrYGkQdGc044Mfe',\n    '5uUtqceCsKoQ2J7DDGNbIE',\n    '2WOMIZnu99mzeMo13bZq8m',\n    '3QHMxEOAGD51PDlbFPHLyJ',\n  ],\n  bachata: [\n    // Oren's songs from https://open.spotify.com/user/orenso/playlist/3RmBmFzS8OJrhs4LDOLow9?si=TJWS0IGSRq2_Xk6TgHxAUQ\n    '2TGQVxPAdCObGhvWQXSLqs',\n    '6eUncuJutsFi9BGO1JaBHh',\n    '0DQd0tWurMHUAv0cMnDELH',\n    '65H6t1WQBim6q93yM8fEwn',\n    '0zL9dieoCcjBWV01y73Cj1',\n    '2dy3TKVDEbIeWxeIb8JWqZ',\n\n    // Songs from https://open.spotify.com/user/spotify/playlist/37i9dQZF1DX7MTlMMRl0MD?si=FzvfufOOSnWKeupf17UnBw\n    '6FwEmbPo3d3USlMzuulT69',\n    '2swZ0X1njeU32SNJeBKIfW',\n    '1dZe54pxTPI1XsISVTR6ns',\n    '2dy3TKVDEbIeWxeIb8JWqZ',\n    '19CAKZdXVNyZrfmF60RAj3',\n    '0hOpiCYtwEYqenDr8ME31H',\n    '7hLYOkbsngrNAcIXbXfsQu',\n    '1iLv1ieT9BZ3qsti9yTCnG',\n    '0M9Qr6K4wfoGUDBDgSzXgf',\n    '0HDHY6RSHHG2ZTE0cMT4GJ',\n    '4iTtqoImVortyy7MHw51Cv',\n    '4SqiBk88oTJpVOzQYly9Zi',\n    '2MioxSroS0g1mi24LLfcnq',\n    '0muI8DpTEpLqqibPm3sKYf',\n    '709hAukJxapqTU9VhsiQm0',\n    '7a6htfBLgGUd4e36u2ISrx',\n    '1WbXIpiGBJkCiv3hn40iPB',\n    '6I86RF3odBlcuZA9Vfjzeq',\n    '217bRMES4HVbPdUe8l8ECN',\n    '6rXvMpWJbTyhSrVWye7jPE',\n    '4Xqpt53kWML7eTObGxQ43i',\n    '3fPMRb2gcFTZcYmR0bXnDc',\n    '6BdAwMv1YorLfkBWlE493X',\n    '3cZhoRYQFqJ8B9z0AN9gJB',\n    '7sasRSZNmUPaHXLWndC8oj',\n    '2kcc5humLS6PKOI9rwvXex',\n    '3iGjLTDqokSuf6yYI83wzi',\n    '31q1SLZZJZkdXENljyG1xC',\n    '6CKlQHQIxhWtq7MnEJ6QCz',\n    '0wDEs6WvqDHq4XJZC0dHhO',\n    '0DQd0tWurMHUAv0cMnDELH',\n    '65H6t1WQBim6q93yM8fEwn',\n    '4dz2XW41AQTMn0bFKzaqsr',\n    '03jN3MZ569uT3bzoh3pN5v',\n    '4OpFR4sz9kxF983pKdnx1k',\n    '0KBfGeUKLjNaernyUDUqgM',\n    '1ePEbbeWx3scydfir7HBcq',\n    '4AX0mPH9LnPtRPU7qYqTHW',\n    '7oJ5gMtXIjVyx9plzoFkHU',\n    '61LvtpZIualXhxhu8xkC2m',\n    '1ehvUn5ei1Ef4XiK7Q32rs',\n    '0vOU4wzq4KOLZia5bOMix0',\n    '6wwRmRSc9OP9RdovSj7CZi',\n    '6pMaJqcSPcB2JQNj23wJLN',\n    '1w2cCY4iJ50Pm9qtwt310x',\n    '4EzRYdHmOmUB7KXz1Dq8Ny',\n    '7f7hBMVpdt2KGVOMHCGQnl',\n    '3QeU2rcc5buv0B9VA0gRKH',\n    '6mmza1GaPukLZ7tDYWcKj1',\n    '61syCDsbd59CNRb9bEN32U',\n    '6PqaUk1aS7KXHXBr8iELKb',\n    '1dazXPzmgBB7sNxodglb1l',\n    '5vY9L2lWnaCXwecxaUigps',\n    '18hnXK4HWm3BxT8QijiJVO',\n    '5ak2OdhjNeZrksibKWG19G',\n    '42jedyDXAZydzL3OrslfUp',\n    '1sRLHqXAohDI070tWU6QIS',\n    '7CLP5aEc8SAYdhBqy2Zwjr',\n    '4NfwBgmzmzx8WpyIy9C6p7',\n    '1o5xQ4v5K9RqsU5xVbkDY6',\n    '4pJDYk0CnZoydOy6qzqxJW',\n    '1PL6AwnzEDWjKErmFgDgoT',\n    '3vAPw05pWZ3uPI1SbqG1vv',\n    '1dN6LzonVuFgQ90x4Ttrse',\n    '0OgX5NA7KFx8FCr5W0HYl9',\n    '1sjP5ywDibuwKax81gHCTG',\n    '3P3KYALsULoYB2D8qIuu2A',\n    '6HI59DNB97wXvOyP3kWdyE',\n    '6IfMD01z39P15HKezjdaMP',\n    '44ayrb3kbN6jwX9WWdoTcV',\n  ],\n  merengue: [\n    // Songs from https://open.spotify.com/user/spotify/playlist/37i9dQZF1DWVAa4Dwc5f7L?si=T1vDIlH0TuiSonrvdNX4HA\n    '2gT8OWcAgPg0yawg1qw4Nv',\n    '05fjQ7QDmLNxhGZvWwqHvH',\n    '3lUWGTKZuzP2NmGUwe1ox8',\n    '7sYp72BQkl2HxgPX3eeQW0',\n    '27bYvOSXnVkJEbycstEkR6',\n    '1ZWHHugA5Zl47mhEuCdeoT',\n    '0UnJphaDGpljP59lXRMaiE',\n    '7IlywUbjL6TBFQyAzCqOsf',\n    '0v1LHKfY09iflWGxTYL6qW',\n    '5NDZ8iNl6Q8KvZthfzYLsZ',\n    '0iZzWrpdwwFrynCW0bmyVe',\n    '3mO4W4lB8wDrQ0UE3dz4gh',\n    '3T4QCjtq7USCFlaOotam9Y',\n    '5HaJFkq7DEQ6QMaj0wwI7Z',\n    '1MVJppKg8rGNtDuy4YKWME',\n    '2ltjgZUx2DgxdYGxuyhNAd',\n    '01PPF7e3AD0LE3V9DTDURP',\n    '7reg3cRS3uPi326LD1F3e5',\n    '0WzWqQlZBzxgzVhm8Ep4CX',\n    '3Dxxf8mFAQg8MRcsCZKOKm',\n    '2pGYaMlxkicWR0Pkddlmi8',\n    '00oK3qICo8tnl1WN3ah5aD',\n    '5bpQBpeGQ0vRYs5JTGqR1t',\n    '13PqqV8pIb6XpdZ85CACxF',\n    '6ZOZW00i9w8wwfwZtpreZI',\n    '4UHi2puJF8VEdpC4AJfKku',\n    '0zDy3gddxKzHvOqbfryNg9',\n    '3srURD7HBktaD14VKzctR4',\n    '4u6DLFZrXINev3s4IfDobf',\n    '2zPWfNLVf6rObUn27LKlLy',\n    '66Zw21Bjq8jppl6BrOv1JZ',\n    '6Aqtgsk7nzqAXird9otVEe',\n    '2qlsW9JoDmXNyM7odbFxmn',\n    '6hFhxzvpcWmtDJre0ejXEj',\n    '6WVdJyM1kF6SGrLERsiM1a',\n    '5w8uBAoUDhjGab0EACmmaO',\n    '47nD9EtDtUORYiLPDY4DeI',\n    '7Losbk8sx6RuMCq4Rp1E8M',\n    '6BN6upiyMThT7WtgdQZzZB',\n    '3htW78fd7ocb9rrgnXOLjk',\n    '6qf6WInODgkkK4503iSea5',\n    '6uDRMte0V2h22GZ24TLafo',\n    '4T8nmzARtOIVPuYJ0fvvMX',\n    '5fAlFBYi2rLMdvaRF5PFs0',\n    '392fx2nlTxr8VrMUU9ybqi',\n    '3fO9MbNQQGMtVzyLGwtxRd',\n    '0HXa7KKhJdwU5ypGHvwzBw',\n    '1xu6ahswvBgOe8V7DFHhPC',\n    '1oInQX1RuH1TcHuDv8Gvw3',\n    '5s9qThhS2o3TommmmcmoqU',\n  ],\n  kizomba: [\n\n    // Songs from https://open.spotify.com/user/carloncho-30/playlist/3o9uOgxyrM8vRI53yfkNxY?si=kAc-En-RSju5SGVILTs_jQ\n    '7k6GtIlNKrWcBPadpWGIau',\n    '0fbuZJyu6gyHJXruk0vGkz',\n    '3bsocdNop8BRU7xUe91ZO5',\n    '79pSYGwwdS59svr4Zj8bkO',\n    '0M0S7wJ8qtvHssRkytuRjt',\n    '1zmgXgjQBm9cWcNN5f0cwf',\n    '7x2U8a8ltt9hLBZINnbb5d',\n    '1HmpJAEanU06DdSwxNwFO8',\n    '7dCbLzLWVcYdOKmbk6X5Wj',\n    '3M9XQDFTVjSigY65uG2noK',\n    '1jAcTNZgAVIG5R8epBytaW',\n    '3t2axM2WR6Tyy5lQ60H3DP',\n    '37LhMIzhMkMVVjwJjuKXh0',\n    '3f68uxYfcFipceVEqyqoQo',\n    '0fFYQpXcySoP1aTAesmNTO',\n    '0jmwFUYbHEqPY60yeJIGvT',\n    '1WPWKPJTITG97hvpBFtmpL',\n    '709GVlO1GNZQPOxLXQi3PO',\n\n    // Songs from https://open.spotify.com/user/salsero85il/playlist/5Y9VfrCFt0NgEmyjTVseWr?si=Sf1I0G2XQvmgUDoyoGkWKQ\n    '6PhXswbZFwFlGWiyCuNx1y',\n    '7t1VAARhqmYg30l5OgnUcw',\n    '1Xx1zfcvWMgin1mA8ZPyjv',\n    '00lfmKuo5NCp0LC61FLjPU',\n    '2K3hYYDX6ueaPy403PJqi2',\n    '0qN0K23Us6ozC5CL6q0uAL',\n    '6pRla6fggbVFdsp5jUTuJx',\n    '1AuCWhqJ4vPic3b59zjUpI',\n    '7rDJZ9VmZEhvi1sgePKFKy',\n    '1CyFiX0xKRBNm8kGmfSFLt',\n    '5gN25z7YcmTSEOF65f9K23',\n    '3Rl787jeOJZ0qcR05PBSks',\n    '1WPWKPJTITG97hvpBFtmpL',\n    '6VTzUSp0U0S1Jw30p2yn4Z',\n    '3uRgviLV9EsljL5wVcB24w',\n\n    // Songs from https://open.spotify.com/user/spotify/playlist/37i9dQZF1DX1l6qs3gcM4U?si=XoJN97acQVeBE4ot5ChbQw\n    '0yK1An55fUL6ZgYzWqb3UX',\n    '1xb4uv25MokAY9xos31WXL',\n    '3y8Un4QcNTLwAIIgOroXzf',\n    '6n2wC4XVCaSVpJMxBPrJMN',\n    '6VmyaG1l5VG69AGLecdqpq',\n    '2Rz27kKIB8LlbjzvyM1utV',\n    '0pnQuPugcSa1anG10jlxkz',\n    '2CV9x25ByU2nmmeHSSn4NX',\n    '78guu2HTRnNgncK0UySeDK',\n    '5ZhYcNNdJMYUkUkFjeuWDI',\n    '3hVuyS22fIMAEvyDx2Nxih',\n    '6bqn1qdCyqWAjS8sAaqzFk',\n    '5nXSUlaOCd4sFVHMyjpaDB',\n    '3AxKlhbCVMwrDbP4laSyys',\n    '5NOwexYooxAsUxHiVXv3Rh',\n    '5u2FrLHKEoKjUMguaffQ0t',\n    '6kNQMH8SSCbwSWRbdYvg4U',\n    '6HkqDpMmTV2IT2I01a9Zp5',\n    '2j1UBahUo1bbMu6rHC5GnE',\n    '7zEFn5PC91OB6KYFjCxMHi',\n    '2Huk69nfKmAqeN4m2S7Ybj',\n    '0ZWU5lJs0mA085Phf8PJA2',\n    '03hnjC8kAVy9tmfgcB0p0y',\n    '720YR0UhybUYFQUU4ZAWwP',\n    '2pSOoP6FLJWeRBxdvhyvkJ',\n    '20pd0IMbN7KC9y0FNOVQK0',\n    '7qeh3o6nW5XCZZjbMCEVWd',\n    '0r2ZBAHKX36U3do2a3E0Vd',\n    '6qhwWPfW7AqhWoJPEjyylb',\n    '7IkiNEEUdZboslsmcFuhtJ',\n    '0oZZUl9SpZ9qQvn6HtxXOR',\n    '49Fu8EcEOZ9OnpM1XpPpyU',\n    '1d8RXKUyIQkgrZel7CvFV0',\n    '3T2ag3TOeD3IDqVVfl9ilU',\n    '4rbmWqxIAQpr5CPVfJ1O7J',\n    '101bSnuKjwls52XChDbfvg',\n    '6eD6PhPI0r20NQkbtg8Ywb',\n    '2ieA58j9Fsuo35Gwa6oX8P',\n    '0RKqylCDwg0Lzq8Stu266U',\n    '4nPEwC4QmSEJFI3CJL9e4b',\n    '1iRDn08Im0yWFH1b7oZ6E5',\n    '24wV7K8ryMHWDoseisRafk',\n    '6EMvAQTdJ0Xs7XV5D5dOun',\n    '1F1EJj1aVtbeI0y0hcFtRh',\n    '2axmBwJacXBbSqvVbxtNzY',\n    '46Kt8G76lbRNkGt4zxCFrp',\n    '5cw7KhORjRNFEP5Yyfs98O',\n    '5hIY2jJsMtrMQxW9ivn809',\n    '0WKVGkGPq8NtuLSSQUUu8X',\n    '235N5XR969xiEa5LvjKheT',\n    '5gM4UYTTTcVyg7KsPAbyGR',\n    '3JtkjYRgX5kY2aK5WwYjSk',\n    '4tb70HZ8PwboF7aGGVBl1I',\n    '1AuCWhqJ4vPic3b59zjUpI',\n    '4vGrg4XZcLaGvhRpAPKdnc',\n    '3LV7JsBzte182GK1p6wOUX',\n    '4MWpwncU5J32siqYoMJXPp',\n    '25JonxVTCZOIul9uyv3ff6',\n    '30GRqeKxTuZQ1JEeCvHJKY',\n    '77fXpodJPRKqvnzDiMYkAj',\n    '0WP4sAf9JKYvy1neTliv5C',\n    '7JoecvZbqyl6yM9j0cUgxr',\n    '1Rqauh63hRo1A201F6lvH7',\n    '7qWszdYQHJUXLmlmDgWyqp',\n    '4SDnHKQfewFoUA61Q9rojm',\n    '5PhrhizCs4VCuFjJPvhI5v',\n    '5koelUYXOtUwFvRvuaNu2n',\n    '3ooG7GI5gSSROggAE2pnji',\n    '08W33tq3AxN2RtbQGNxrBa',\n    '6BLLoHOQqY3rOpMoaO6yHv',\n    '0YOLLYNnFbOz0xagmru0SD',\n    '3HjUVOsrtf2fkJRXaXzhkO',\n    '2eWly1qDvIMnrV91WGvAzX',\n    '2qNtAzgJYODcFPDskUAzE0',\n    '4dOY2bDFu1AWr87MUd09Zh',\n  ],\n  reggaeton: [\n    // Songs from https://open.spotify.com/user/spotify/playlist/37i9dQZF1DWY7IeIP1cdjF?si=HIiBBetPRVallXrhVS-7Kw\n    '6RyaV7owmVU6fzEPE17sF1',\n    '6mAN61JH0dzyZpWslS11jy',\n    '4AjWbAwRpxk2worpjNH5CS',\n    '5099x34vBakWpGkHourFxP',\n    '2ksOAxtIxY8yElEWw8RhgK',\n    '59s0s39NFWScuHDbHytI14',\n    '3jbT1Y5MoPwEIpZndDDwVq',\n    '7rknFhrVDyxzTJkPSf7LoW',\n    '2TH65lNHgvLxCKXM3apjxI',\n    '6pNjmMB8FTMEcqGSgs7Mji',\n    '1tpbAGsGpZee5jDHMcLrUJ',\n    '3KekO5WUfJsh7kYU9o2w50',\n    '0fea68AdmYNygeTGI4RC18',\n    '6Y4PDQv4XjYjHLeLmvyOt0',\n    '65HT0L2eAtvbH56XrJqPbf',\n    '1ndyl3wJCFs872XZ3ztPk6',\n    '1ScD7XQYCKmJ3fdNh71lUE',\n    '684EjRHwNsZQ9hCQxL4NYL',\n    '4o1DxRjMCHDwBiOKv88rOl',\n    '5CQzOnFWI0liUblbHYVNge',\n    '1c0hsvHLELX6y8qymnpLKL',\n    '2EEmzqzM70CybVspgM7YRT',\n    '2kjdTPSRPS9mVfRlaenjsf',\n    '2B94bbI1a4LyBpK1439oP7',\n    '6Y6YC93R1r0CISm5iC4j27',\n    '2DFn7QiaiaNNWXuWLABatP',\n    '3J1zbyaI1m4t8oRGgF56oi',\n    '3dWpRjCmaHbroNahuSeX11',\n    '1GBLO0NFODuL31A5fgw0uR',\n    '1KdwnsWOvhM53vezy5ROuf',\n    '1sD32hk8V2vR4ME7M0rPT5',\n    '6K5BsR04ijf3FHNzjbaagD',\n    '0xkUr72eFk4GjSRoEHOyfD',\n    '53uKGbcMjEc2gIWbfmvpdS',\n    '1aUGxXCz9QimNkKeiJtzZ7',\n    '25ZAibhr3bdlMCLmubZDVt',\n    '3TTragde5roTvwS2caAQOc',\n    '6ycsFSUUgyOSZiz3P2o1pT',\n    '4NLcgBskZkUYgpAVQF0sNI',\n    '5lFl0Aksww4t4CGiYYtpZz',\n    '7pxL0DzPpCjjcdfQccvnus',\n    '5CGFApNEqgMcoKo6Q4KJ3g',\n    '7DOh0tBGnyMt6C5OO7o8Yq',\n    '7fTsw0IKbbPDN19keS32tF',\n    '04x4Urpge2kG9uDGdHRsdc',\n    '5suqjbw9bF0T1X3HU1oG1v',\n    '0a41S6Hf3njfUbQTZyxWDq',\n    '5uVgsAzjO6eJR06VPrqUga',\n    '67OKX8DNYygddabwIjExsp',\n    '54FoR5osiOJtVae7SCdSnq',\n  ],\n};\n\nexport default Songs;\n","const GenreMasterConfig = {\n  salsa: {\n    color: 'red', // Color for buttons etc\n    order: 0, // Sort order in a list\n    enabled: true, // The default for whether the genre is enabled in the game\n  },\n  bachata: {\n    color: 'orange',\n    order: 1,\n    enabled: true,\n  },\n  merengue: {\n    color: 'green',\n    order: 2,\n    enabled: false,\n  },\n  kizomba: {\n    color: 'indigo',\n    order: 3,\n    enabled: false,\n  },\n  reggaeton: {\n    color: 'pink',\n    order: 4,\n    enabled: false,\n  },\n};\n\nexport default GenreMasterConfig;\n","// Master config of genres and their appearances\nimport _ from 'lodash';\nimport GenreMasterConfig from '../config/Genres';\n\nexport const genreButtonStyle = {\n// Add spacing between buttons in vertical button group\n  marginBottom: '10px',\n  borderRadius: '10px',\n};\n\nexport function genreColor(genre) {\n  return _.get(GenreMasterConfig, [genre, 'color'], 'secondary');\n}\n\nexport function genreOrder(genre) {\n  return _.get(GenreMasterConfig, [genre, 'order'], Number.MAX_SAFE_INTEGER);\n}\n\nexport function sortedGenres(genres = _.keys(GenreMasterConfig)) {\n  return (\n    genres.sort((a, b) => (\n      genreOrder(a) - genreOrder(b)\n    ))\n  );\n}\n\nexport function genreIsEnabledDefault() {\n  return _.mapValues(GenreMasterConfig, (genre) => (genre.enabled));\n}\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useState } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Col,\n  Container,\n  Row,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport SpotifyPlayButton from './SpotifyPlayButton';\nimport Songs from '../config/Songs';\nimport * as Genres from '../util/GenreUtils';\n\nfunction PlayScreen(props) {\n  const [spotifyUri, setSpotifyUri] = useState('');\n  const [genre, setGenre] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const { t } = useTranslation();\n\n  function initializeGenre() {\n    // First randomly choose a genre\n    const chosenGenre = _.sample(props.enabledGenres());\n    const chosenSpotifyUri = _.sample(_.uniq(Songs[chosenGenre]));\n    setSpotifyUri(chosenSpotifyUri);\n    setGenre(chosenGenre);\n    setIsLoaded(true);\n  }\n\n  function checkAnswer(answer) {\n    props.handleGameState(\n      'finished',\n      {\n        newPlayerWon: answer === genre,\n        newLastGenre: genre,\n        newLastSpotifyUri: spotifyUri,\n      },\n    );\n  }\n\n  function answerButtons() {\n    const enabledGenres = props.enabledGenres();\n    const buttons = enabledGenres.map((enabledGenre) => (\n      <Button\n        key={`${enabledGenre} answer button`}\n        style={Genres.genreButtonStyle}\n        color={Genres.genreColor(enabledGenre)}\n        size=\"lg\"\n        onClick={() => checkAnswer(enabledGenre)}\n      >\n        {t(_.startCase(enabledGenre))}\n      </Button>\n    ));\n\n    const buttonGroup = <ButtonGroup vertical>{buttons}</ButtonGroup>;\n\n    return buttonGroup;\n  }\n\n  if (isLoaded) {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h2>{t('What type of song is playing?')}</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {answerButtons()}\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <SpotifyPlayButton spotifyUri={spotifyUri} tiny />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  initializeGenre();\n  return <></>;\n}\n\nPlayScreen.propTypes = {\n  handleGameState: PropTypes.func.isRequired,\n  enabledGenres: PropTypes.func.isRequired,\n};\n\nexport default PlayScreen;\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport SpotifyPlayButton from './SpotifyPlayButton';\n\nfunction GameOverScreen({\n  handleGameState,\n  playerWon,\n  lastGenre,\n  lastSpotifyUri,\n}) {\n  const { t } = useTranslation();\n  let outputMessage;\n  let buttonColor;\n  if (playerWon) {\n    outputMessage = 'correct';\n    buttonColor = 'success';\n  } else {\n    outputMessage = 'wrong';\n    buttonColor = 'danger';\n  }\n\n  const lastGenreName = t(_.startCase(lastGenre));\n  const lastGenreMessage = t('answerFeedback', { genre: lastGenreName });\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h2>{t(outputMessage)}</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button color={buttonColor} size=\"lg\" onClick={() => handleGameState('playing')}>{t('Play Again!')}</Button>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '20px' }}>\n        <Col>\n          <h6><i>{lastGenreMessage}</i></h6>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <SpotifyPlayButton spotifyUri={lastSpotifyUri} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nGameOverScreen.propTypes = {\n  handleGameState: PropTypes.func.isRequired,\n  playerWon: PropTypes.bool.isRequired,\n  lastSpotifyUri: PropTypes.string.isRequired,\n  lastGenre: PropTypes.string.isRequired,\n};\n\nexport default GameOverScreen;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useState } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Col,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Row,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport * as Genres from '../util/GenreUtils';\n\nfunction OptionsModal(props) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [genreButtonIsEnabled, setGenreButtonIsEnabled] = useState(props.genreIsEnabled);\n\n  const { t } = useTranslation();\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  const handleSubmit = () => {\n    toggleModal();\n    props.setGenreIsEnabled(genreButtonIsEnabled);\n  };\n\n  const handleOptionButtonClick = (genre) => {\n    const newGenreButtonIsEnabled = {\n      ...genreButtonIsEnabled,\n      [genre]: !genreButtonIsEnabled[genre],\n    };\n\n    // Only update if at least one genre remains enabled\n    if (_.includes(newGenreButtonIsEnabled, true)) {\n      setGenreButtonIsEnabled(newGenreButtonIsEnabled);\n    }\n  };\n\n  const optionButtons = () => {\n    // eslint-disable-next-line react/prop-types\n    const buttons = Genres.sortedGenres().map((genre) => (\n      <Button\n        className={genreButtonIsEnabled[genre] ? '' : 'disabled'}\n        key={`${genre} answer button`}\n        style={Genres.genreButtonStyle}\n        color={Genres.genreColor(genre)}\n        size=\"lg\"\n        onClick={() => handleOptionButtonClick(genre)}\n        outline={!genreButtonIsEnabled[genre]}\n      >\n        {t(_.startCase(genre))}\n      </Button>\n    ));\n\n    const buttonGroup = <ButtonGroup vertical>{buttons}</ButtonGroup>;\n\n    return buttonGroup;\n  };\n\n  const resetModal = () => {\n    setGenreButtonIsEnabled(props.genreIsEnabled);\n  };\n\n  return (\n    <Container style={{ marginTop: '10px' }}>\n      <Row>\n        <Col>\n          <Button color=\"link\" onClick={toggleModal}>{t('Options')}</Button>\n          <Modal\n            isOpen={isModalOpen}\n            size=\"sm\"\n            centered\n            toggle={toggleModal}\n            onClosed={resetModal} // Don't want genre buttons to persist once modal closes\n          >\n            <form className=\"App\" onSubmit={handleSubmit}>\n              <ModalHeader>{t('Choose Genres')}</ModalHeader>\n              <ModalBody>\n                <Container fluid>\n                  <Row>\n                    <Col>\n                      {optionButtons()}\n                    </Col>\n                  </Row>\n                </Container>\n              </ModalBody>\n              <ModalFooter className=\"no-border\">\n                <Container fluid>\n                  <Row className=\"justify-content-center\">\n                    <Col>\n                      <Button color=\"primary\" onClick={handleSubmit}>{t('Done')}</Button>\n                    </Col>\n                  </Row>\n                </Container>\n              </ModalFooter>\n            </form>\n          </Modal>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nOptionsModal.propTypes = {\n  genreIsEnabled: PropTypes.shape({}),\n  setGenreIsEnabled: PropTypes.func.isRequired,\n};\n\nOptionsModal.defaultProps = {\n  genreIsEnabled: {},\n};\n\nexport default OptionsModal;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Col,\n  Container,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Row,\n  UncontrolledButtonDropdown,\n} from 'reactstrap';\nimport { IoMdGlobe } from 'react-icons/io';\nimport _ from 'lodash';\n\nconst languageCodesToNames = {\n  en: 'English',\n  es: 'Español',\n  he: 'עברית',\n  jp: '日本語',\n  'zh-CN': '中文（简体）',\n  'zh-HK': '中文（繁體）',\n};\n\nfunction LanguageCodeToName(languageCode) {\n  let lookupCode = languageCode;\n\n  if (lookupCode === 'zh-tw') {\n    lookupCode = 'zh-HK';\n  }\n\n  return _.get(languageCodesToNames, lookupCode, null);\n}\n\nfunction LanguageSelector() {\n  const { i18n } = useTranslation();\n  const fallbackLng = i18n.options.fallbackLng[0];\n  const currentLanguage = LanguageCodeToName(i18n.language) ? i18n.language : fallbackLng;\n  const dropDownItems = _.keys(languageCodesToNames).map((languageCode) => (\n    <DropdownItem\n      onClick={() => i18n.changeLanguage(languageCode)}\n      key={`${languageCode} DropDownItem`}\n    >\n      {LanguageCodeToName(languageCode)}\n    </DropdownItem>\n  ));\n\n  return (\n    <Container style={{ marginTop: '40px' }}>\n      <Row>\n        <Col>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color=\"link\" caret size=\"sm\" style={{ color: 'gray' }}>\n              <IoMdGlobe />\n              {` ${LanguageCodeToName(currentLanguage)}`}\n            </DropdownToggle>\n            <DropdownMenu>\n              {dropDownItems}\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default LanguageSelector;\n","import React from 'react';\nimport {\n  Col,\n  Container,\n  Row,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\n\nfunction ScoreBoard(props) {\n  const { t } = useTranslation();\n  const { correctCount, incorrectCount } = props;\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"auto\">\n          {`${t('scoreBoardCorrect')}: ${correctCount}`}\n        </Col>\n        <Col md=\"auto\">\n          {`${t('scoreBoardIncorrect')}: ${incorrectCount}`}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nScoreBoard.propTypes = {\n  correctCount: PropTypes.string.isRequired,\n  incorrectCount: PropTypes.string.isRequired,\n};\n\nexport default ScoreBoard;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useState, useRef } from 'react';\nimport _ from 'lodash';\nimport StartScreen from './StartScreen';\nimport PlayScreen from './PlayScreen';\nimport GameOverScreen from './GameOverScreen';\nimport OptionsModal from './OptionsModal';\nimport LanguageSelector from './LanguageSelector';\nimport * as Genres from '../util/GenreUtils';\nimport ScoreBoard from './ScoreBoard';\n\nfunction Game() {\n  const [gameState, setGameState] = useState('starting');\n  const [playerWon, setPlayerWon] = useState(false);\n  const [genreIsEnabled, setGenreIsEnabled] = useState(Genres.genreIsEnabledDefault());\n  const [lastSpotifyUri, setLastSpotifyUri] = useState('');\n  const [lastGenre, setLastGenre] = useState('');\n  const correctCount = useRef(0);\n  const incorrectCount = useRef(0);\n\n  function enabledGenres() {\n    return Genres.sortedGenres(\n      _.keys(\n        _.pickBy(genreIsEnabled, _.identity),\n      ),\n    );\n  }\n\n  function handleGameState(\n    newGameState,\n    {\n      newPlayerWon = playerWon,\n      newLastGenre = lastGenre,\n      newLastSpotifyUri = lastSpotifyUri,\n    } = {},\n  ) {\n    setGameState(newGameState);\n    setPlayerWon(newPlayerWon);\n    setLastGenre(newLastGenre);\n    setLastSpotifyUri(newLastSpotifyUri);\n  }\n\n  if (gameState === 'playing') {\n    return (\n      <>\n        <PlayScreen\n          handleGameState={handleGameState}\n          enabledGenres={enabledGenres}\n          key={JSON.stringify(genreIsEnabled)}\n          /*  OptionsModal can change this.state.genreIsEnabled\n              When this happens we want PlayScreen to be reset.\n              Key therefore uses this.state.genreIsEnabled because\n              when a key changes, React will create a new component instance\n              rather than update the current one (see link below)\n              https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-controlled-component */\n        />\n        <ScoreBoard\n          correctCount={correctCount.current}\n          incorrectCount={incorrectCount.current}\n        />\n        <OptionsModal\n          genreIsEnabled={genreIsEnabled}\n          setGenreIsEnabled={setGenreIsEnabled}\n        />\n        <LanguageSelector />\n      </>\n    );\n  }\n\n  if (gameState === 'finished') {\n    // update the scores on the scoreboard\n    if (playerWon) {\n      correctCount.current += 1;\n    } else {\n      incorrectCount.current += 1;\n    }\n\n    return (\n      <>\n        <GameOverScreen\n          handleGameState={handleGameState}\n          playerWon={playerWon}\n          lastSpotifyUri={lastSpotifyUri}\n          lastGenre={lastGenre}\n        />\n        <ScoreBoard\n          correctCount={correctCount.current}\n          incorrectCount={incorrectCount.current}\n        />\n        <LanguageSelector />\n      </>\n    );\n  }\n\n  console.log('no ifs');\n\n  return (\n    <>\n      <StartScreen handleGameState={handleGameState} />\n      <OptionsModal\n        genreIsEnabled={genreIsEnabled}\n        setGenreIsEnabled={setGenreIsEnabled}\n      />\n      <LanguageSelector />\n    </>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactGA from 'react-ga'; // Google Analytics\nimport Game from './Game';\n\nfunction Main() {\n  ReactGA.initialize('UA-150417728-1');\n  ReactGA.pageview('/main');\n  return (\n    <div className=\"App minHeight100vh\">\n      <Game />\n    </div>\n  );\n}\n\nexport default Main;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport Main from './components/Main';\nimport './scss/App.scss';\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './scss/custom.scss';\nimport './i18n';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}