{"version":3,"sources":["i18n.js","components/StartScreen.jsx","components/SpotifyPlayButton.jsx","config/Songs.js","config/Genres.js","util/GenreUtils.js","components/PlayScreen.jsx","components/GameOverScreen.jsx","components/OptionsModal.jsx","components/LanguageSelector.jsx","components/Game.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["traditionalChineseTranslations","Salsa","Bachata","Merengue","Kizomba","Reggaeton","Options","Done","correct","wrong","answerFeedback","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translations","es","he","jp","zhcn","zhhk","zhtw","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","StartScreen","handleGameState","t","useTranslation","Container","Row","Col","Button","color","size","onClick","SpotifyPlayButton","spotifyUri","tiny","src","width","height","frameBorder","allow","title","defaultProps","Songs","salsa","bachata","merengue","kizomba","reggaeton","GenreMasterConfig","order","enabled","genreButtonStyle","marginBottom","borderRadius","genreColor","genre","_","get","genreOrder","Number","MAX_SAFE_INTEGER","sortedGenres","keys","sort","a","b","PlayScreen","props","state","isLoaded","answerButtons","bind","sample","this","enabledGenres","uniq","setState","buttons","map","key","style","Genres","checkAnswer","startCase","ButtonGroup","vertical","answer","playerWon","lastGenre","lastSpotifyUri","React","Component","withTranslation","GameOverScreen","outputMessage","buttonColor","lastGenreName","lastGenreMessage","marginTop","OptionsModal","isModalOpen","genreButtonIsEnabled","genreIsEnabled","toggleModal","handleSubmit","optionButtons","handleOptionButtonClick","resetModal","prevState","setGenreIsEnabled","newGenreButtonIsEnabled","includes","className","outline","Modal","isOpen","centered","toggle","onClosed","onSubmit","ModalHeader","ModalBody","fluid","ModalFooter","LanguageSelector","currentLanguage","language","languageCodeToName","dropDownItems","code","DropdownItem","changeLanguage","UncontrolledButtonDropdown","DropdownToggle","caret","DropdownMenu","Game","gameState","mapValues","pickBy","identity","JSON","stringify","Main","ReactGA","initialize","pageview","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gTAIMA,EAAiC,CACrCC,MAAO,eACPC,QAAS,qBACTC,SAAU,qBACVC,QAAS,qBACTC,UAAW,qBAEX,oBAAqB,8CACrB,QAAS,gBAETC,QAAS,eACT,gBAAiB,2BACjBC,KAAM,eAENC,QAAS,mBACTC,MAAO,kBACPC,eAAgB,gCAChB,cAAe,gBACf,gCAAiC,qDAGnCC,IACGC,IAAIC,KACJD,IAAIE,KACJC,KAAK,CACJC,UAAW,CAGTC,GAAI,CACFC,aAAc,CAEZjB,MAAO,QACPC,QAAS,UACTC,SAAU,WACVC,QAAS,UACTC,UAAW,YAGX,oBAAqB,oBACrB,QAAS,QAGTC,QAAS,UACT,gBAAiB,gBACjBC,KAAM,OAGNC,QAAS,cACTC,MAAO,WACPC,eAAgB,4BAChB,cAAe,cAGf,gCAAiC,kCAGrCS,GAAI,CACFD,aAAc,CACZjB,MAAO,QACPC,QAAS,UACTC,SAAU,WACVC,QAAS,UACTC,UAAW,eAEX,oBAAqB,mBACrB,QAAS,SAETC,QAAS,WACT,gBAAiB,oBACjBC,KAAM,QAENC,QAAS,mBACTC,MAAO,gBACPC,eAAgB,mCAChB,cAAe,YACf,gCAAiC,sDAGrCU,GAAI,CACFF,aAAc,CAEZjB,MAAO,2BACPC,QAAS,kCACTC,SAAU,iCACVC,QAAS,6CACTC,UAAW,uCAGX,oBAAqB,yEACrB,QAAS,sBAGTC,QAAS,mDACT,gBAAiB,2DACjBC,KAAM,2BAGNC,QAAS,+BACTC,MAAO,4CACPC,eAAgB,iEAChB,cAAe,yCAGf,gCAAiC,0GAGrCW,GAAI,CACFH,aAAc,CACZjB,MAAO,qBACPC,QAAS,iCACTC,SAAU,2BACVC,QAAS,2BACTC,UAAW,2BAEX,oBAAqB,2EACrB,QAAS,gBAETC,QAAS,iCACT,gBAAiB,6CACjBC,KAAM,2BAENC,QAAS,yDACTC,MAAO,2DACPC,eAAgB,4CAChB,cAAe,4BACf,gCAAiC,iHAGrCY,KAAM,CACJJ,aAAc,CACZjB,MAAO,eACPC,QAAS,qBACTC,SAAU,qBACVC,QAAS,qBACTC,UAAW,qBAEX,oBAAqB,8CACrB,QAAS,gBAETC,QAAS,eACT,gBAAiB,2BACjBC,KAAM,eAENC,QAAS,mBACTC,MAAO,kBACPC,eAAgB,gCAChB,cAAe,gBACf,gCAAiC,sDAGrCa,KAAM,CACJL,aAAclB,GAEhBwB,KAAM,CACJN,aAAclB,IAGlByB,YAAa,KACbC,OAAO,EAGPC,GAAI,CAAC,gBACLC,UAAW,eAEXC,cAAc,EAEdC,cAAe,CACbC,aAAa,KAIJpB,EAAf,EAAeA,I,wGC7IAqB,MAvBf,YAA2C,IAApBC,EAAmB,EAAnBA,gBACbC,EAAMC,cAAND,EAER,OACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BAAKJ,EAAE,wBAGX,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,KAAK,KAAKC,QAAS,kBAAMT,EAAgB,aAAaC,EAAE,c,QCpB1F,SAASS,EAAT,GAAkD,IAArBC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,KACvC,OACE,4BACEC,IAAG,+CAA0CF,GAC7CG,MAAOF,EAAO,KAAO,MACrBG,OAAO,KACPC,YAAY,IACZC,MAAM,kBACNC,MAAM,+BAUZR,EAAkBS,aAAe,CAC/BP,MAAM,GAGOF,QC0WAU,EAnYD,CACZC,MAAO,CAEL,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBAGA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,0BAEFC,QAAS,CAEP,yBACA,yBACA,yBACA,yBACA,yBACA,yBAGA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,0BAEFC,SAAU,CAER,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,0BAEFC,QAAS,CAGP,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBAGA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBAGA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,0BAEFC,UAAW,CAET,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,2BCnWWC,EA5BW,CACxBL,MAAO,CACLd,MAAO,MACPoB,MAAO,EACPC,SAAS,GAEXN,QAAS,CACPf,MAAO,SACPoB,MAAO,EACPC,SAAS,GAEXL,SAAU,CACRhB,MAAO,QACPoB,MAAO,EACPC,SAAS,GAEXJ,QAAS,CACPjB,MAAO,SACPoB,MAAO,EACPC,SAAS,GAEXH,UAAW,CACTlB,MAAO,OACPoB,MAAO,EACPC,SAAS,ICpBAC,EAAmB,CAE9BC,aAAc,OACdC,aAAc,QAGT,SAASC,EAAWC,GACzB,OAAOC,IAAEC,IAAIT,EAAmB,CAACO,EAAO,SAAU,aAG7C,SAASG,EAAWH,GACzB,OAAOC,IAAEC,IAAIT,EAAmB,CAACO,EAAO,SAAUI,OAAOC,kBAGpD,SAASC,IACd,OAD+D,uDAA3BL,IAAEM,KAAKd,IAElCe,MAAK,SAACC,EAAGC,GAAJ,OACVP,EAAWM,GAAKN,EAAWO,M,ICL3BC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXnC,WAAY,GACZsB,MAAO,GACPc,UAAU,GAGZ,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBATJ,E,iFAcjB,IAAMhB,EAAQC,IAAEgB,OAA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","file":"static/js/main.05680cc6.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nconst traditionalChineseTranslations = {\n  Salsa: '莎莎',\n  Bachata: '巴恰塔',\n  Merengue: '梅倫格',\n  Kizomba: '基宗巴',\n  Reggaeton: '雷鬼凍',\n\n  'Salsa or Bachata?': '莎莎還是巴恰塔?',\n  'Play!': '開始!',\n\n  Options: '選項',\n  'Choose Genres': '選擇類型',\n  Done: '完成',\n\n  correct: '沒錯 :D!',\n  wrong: '錯了 :(',\n  answerFeedback: '(是{{genre}}的歌)',\n  'Play Again!': '再玩!',\n  'What type of song is playing?': '這是什麼類型的歌?',\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      // English first as it is the fallback language\n      // Everything else in ABC order\n      en: {\n        translations: {\n          // Common\n          Salsa: 'Salsa',\n          Bachata: 'Bachata',\n          Merengue: 'Merengue',\n          Kizomba: 'Kizomba',\n          Reggaeton: 'Reggaeton',\n\n          // StartScreen\n          'Salsa or Bachata?': 'Salsa or Bachata?',\n          'Play!': 'Play!',\n\n          // OptionsModal\n          Options: 'Options',\n          'Choose Genres': 'Choose Genres',\n          Done: 'Done',\n\n          // GameOverScreen\n          correct: 'Correct! :D',\n          wrong: 'Wrong :(',\n          answerFeedback: '(It was a {{genre}} song)',\n          'Play Again!': 'Play Again!',\n\n          // PlayScreen\n          'What type of song is playing?': 'What type of song is playing?',\n        },\n      },\n      es: {\n        translations: {\n          Salsa: 'Salsa',\n          Bachata: 'Bachata',\n          Merengue: 'Merengue',\n          Kizomba: 'Kizomba',\n          Reggaeton: 'Reggaetón',\n\n          'Salsa or Bachata?': 'Salsa o Bachata?',\n          'Play!': 'Jugar!',\n\n          Options: 'Opciones',\n          'Choose Genres': 'Eligir Géneros',\n          Done: 'Listo',\n\n          correct: '¡Correcto :D!',\n          wrong: 'Incorrecto :(',\n          answerFeedback: '(Fue un canción de {{genre}})',\n          'Play Again!': 'Otra Vez!',\n          'What type of song is playing?': '¿Qué tipo de canción se está tocando?',\n        },\n      },\n      he: {\n        translations: {\n          // Common\n          Salsa: 'סלסה',\n          Bachata: \"בצ'אטה\",\n          Merengue: 'מרנגה',\n          Kizomba: 'קיזומבה',\n          Reggaeton: 'רגאטון',\n\n          // StartScreen\n          'Salsa or Bachata?': \"?סלסה או באצ'תה\",\n          'Play!': '!שחק',\n\n          // OptionsModal\n          Options: 'אפשרויות',\n          'Choose Genres': \"בחר ז'אנרים\",\n          Done: 'סיום',\n\n          // GameOverScreen\n          correct: '(: !נכון',\n          wrong: '): !לא נכון',\n          answerFeedback: '(זה היה שיר {{genre}})',\n          'Play Again!': '!שחק שוב',\n\n          // PlayScreen\n          'What type of song is playing?': '?איזה סוג של שיר מנגן',\n        },\n      },\n      jp: {\n        translations: {\n          Salsa: 'サルサ',\n          Bachata: 'バチャータ',\n          Merengue: 'メレンゲ',\n          Kizomba: 'キゾンバ',\n          Reggaeton: 'レゲトン',\n\n          'Salsa or Bachata?': 'サルサか、バチャータか？',\n          'Play!': '遊ぶ!',\n\n          Options: 'オプション',\n          'Choose Genres': 'ジャンルを選ぶ',\n          Done: 'オッケー',\n\n          correct: 'あった！（╹◡╹）',\n          wrong: 'あってない　(◞‸◟)',\n          answerFeedback: '({{genre}}の曲でした)',\n          'Play Again!': 'もう一度!',\n          'What type of song is playing?': 'どんなジャンルの曲が流れていますか？',\n        },\n      },\n      zhcn: {\n        translations: {\n          Salsa: '莎莎',\n          Bachata: '巴恰塔',\n          Merengue: '梅伦格',\n          Kizomba: '基宗巴',\n          Reggaeton: '雷鬼冻',\n\n          'Salsa or Bachata?': '莎莎还是巴恰塔?',\n          'Play!': '开始!',\n\n          Options: '选项',\n          'Choose Genres': '选择类型',\n          Done: '完成',\n\n          correct: '没错 :D!',\n          wrong: '错了 :(',\n          answerFeedback: '(是{{genre}}的歌)',\n          'Play Again!': '再玩!',\n          'What type of song is playing?': '这是什么类型的歌?',\n        },\n      },\n      zhhk: {\n        translations: traditionalChineseTranslations,\n      },\n      zhtw: {\n        translations: traditionalChineseTranslations,\n      },\n    },\n    fallbackLng: 'en',\n    debug: true,\n\n    // have a common namespace used around the full app\n    ns: ['translations'],\n    defaultNS: 'translations',\n\n    keySeparator: false, // we use content as keys\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\n\nfunction StartScreen({ handleGameState }) {\n  const { t } = useTranslation();\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h2>{t('Salsa or Bachata?')}</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button color=\"primary\" size=\"lg\" onClick={() => handleGameState('playing')}>{t('Play!')}</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nStartScreen.propTypes = {\n  handleGameState: PropTypes.func.isRequired,\n};\n\nexport default StartScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SpotifyPlayButton({ spotifyUri, tiny }) {\n  return (\n    <iframe\n      src={`https://open.spotify.com/embed/track/${spotifyUri}`}\n      width={tiny ? '80' : '300'}\n      height=\"80\"\n      frameBorder=\"0\"\n      allow=\"encrypted-media\"\n      title=\"I am a Spotify play button\"\n    />\n  );\n}\n\nSpotifyPlayButton.propTypes = {\n  spotifyUri: PropTypes.string.isRequired,\n  tiny: PropTypes.bool,\n};\n\nSpotifyPlayButton.defaultProps = {\n  tiny: false,\n};\n\nexport default SpotifyPlayButton;\n","const Songs = {\n  salsa: [\n    // Oren's songs from https://open.spotify.com/user/orenso/playlist/5ahnssobNZ1j6js1XtEcfa?si=yRKm0EyqQnqEOiZpqOY9xA\n    '11i880AC0EIX8azPooV52r',\n    '7ilVeP52B7yBCOz4fPQMVE',\n    '5M830cD7MNeiiwIGHzH9TV',\n    '4aWmUDTfIPGksMNLV2rQP2',\n    '1yM7GIEJ2QniupkEHOyp0a',\n    '3dE0LmLCkCUyMa51GCwAOv',\n    '3fucYASejkSMwtAYjFRKlF',\n    '0n2SEXB2qoRQg171q7XqeW',\n    '50ie858tDK1UM2hhB60A3W',\n    '69kOkLUCkxIZYexIgSG8rq',\n    '4iImxqMlF3CeNRwKKua9jn',\n    '1Oex59PRSZtOqRHEPpf8h0',\n    '5lQCYm9wTxbRgvrNNwN9xu',\n    '3VtxQCEOnJ8Ge65CdQwvsa',\n    '6e41VqRGWZGvCKtJ5roSEx',\n    '5c03MWAT1BmzF8bcEssWgn',\n    '1nZziTuPRwCfJe1XvVC760',\n    '0KVP7acJXaxGx10hutXpui',\n    '23Fw0qh3Onqn2276LiL2pT',\n    '13zhZuedpA05BxrInLtfbo',\n    '1IcnHHfeAkdc88LybFWwb9',\n    '0vUctBW4so39hS6IZ7ibKw',\n    '23Vb5teQKNSNvPgUjLtI8j',\n    '14AzRctwIdAs8xTZkfcpko',\n\n    // Songs from https://open.spotify.com/user/spotify/playlist/37i9dQZF1DX4qKWGR9z0LI?si=Cd6MkmfST1Opy7JJRzIHOA\n    '5E7tWGNU9baL3BODJmApsV',\n    '3c5PYEQmBkxqxsb0xMsRnk',\n    '15LaR0cTTGwM9D6Q02ay2L',\n    '5OYAkymF4NECxYhNIero4j',\n    '7F6O4IJtrHNBdKFpcHwMJg',\n    '60VVaKgIJNftR2UWkLIYah',\n    '1MZGLqbtT6BQs3OM7R92UY',\n    '0amRhMUb9wYrDOmSD938AQ',\n    '23Vb5teQKNSNvPgUjLtI8j',\n    '3bpqoOSDwdaK003DPMvDJQ',\n    '4YGSpi9g7ohPFO8TXpvSUZ',\n    '3SXWtn3YbXOuz6s9LN8LeJ',\n    '1m3paVx65imhvCjPx505Oy',\n    '00Ro1lnV3V6i87aY4t8Q43',\n    '383hkMdmA976zOTKRm6PLy',\n    '2soM5TyZ2c98CDMvXljT7a',\n    '6QJ1F9DrlsRSmKDcdVS0Oy',\n    '58unXNsISeHfI2jdqm9nb9',\n    '3WXfQDsASfXrSojk9WB3aR',\n    '6UGYIgkzeLp4BQy30B9svV',\n    '0gVmUkRX09cY5uNPSI74JC',\n    '4nYuL6R1SuWAOJRwAWasct',\n    '4Ih0JljQ3X3PbHfmuk05PR',\n    '6F3YJ3vWzatHA3nz6GwDoA',\n    '2fhcGmlZZ0j3oAKTaiuk91',\n    '1XuSve6t0vLCm8MG7CZJOA',\n    '5y37hGmb0LU3YiZRlFJGUR',\n    '05K2YWeCYYBgPWFj8TT4uK',\n    '4OQrHFhoNSDxSFitx9KCbx',\n    '0yp6jw6F0LNnjbxLejWaPK',\n    '3yEtuhGR8jOtusa29jWrhG',\n    '1N3G6QQfF0579fHoFQmMzi',\n    '0C279YvVWJcmFMSDtqIGfq',\n    '2kBgJXGbVA6WcA40IFA9KF',\n    '6bum69IXoiGcZCb83ZtfGA',\n    '5p3xpIxdICGLWvjI5FEPng',\n    '5bkWgrKyNhMcriQP3CrHEA',\n    '7nDIflSHQXzaa8zupxwv3U',\n    '286NP8kXWzx2uHb5tr7TGv',\n    '4pUmQqaZklcCOB3rFdWc7g',\n    '2h6WIOkTPvHSAD7vR6lMSS',\n    '3fRIuTih8bzc0vtY9fHhvF',\n    '5YfqVqJwjxiyhxvofbCnHp',\n    '39cz1Ua6M1YFAjxKxipgOK',\n    '6sna5KCgNbt1ciZtVJCjzx',\n    '2vHNqDJe1qvt1sroQfNHSI',\n    '6Mo9TgSE7iKBNSoIdLaP40',\n    '14XQClWbLwmDywY9wVaDiG',\n    '5B0M2VaOrYGkQdGc044Mfe',\n    '5uUtqceCsKoQ2J7DDGNbIE',\n    '2WOMIZnu99mzeMo13bZq8m',\n    '3QHMxEOAGD51PDlbFPHLyJ',\n  ],\n  bachata: [\n    // Oren's songs from https://open.spotify.com/user/orenso/playlist/3RmBmFzS8OJrhs4LDOLow9?si=TJWS0IGSRq2_Xk6TgHxAUQ\n    '2TGQVxPAdCObGhvWQXSLqs',\n    '6eUncuJutsFi9BGO1JaBHh',\n    '0DQd0tWurMHUAv0cMnDELH',\n    '65H6t1WQBim6q93yM8fEwn',\n    '0zL9dieoCcjBWV01y73Cj1',\n    '2dy3TKVDEbIeWxeIb8JWqZ',\n\n    // Songs from https://open.spotify.com/user/spotify/playlist/37i9dQZF1DX7MTlMMRl0MD?si=FzvfufOOSnWKeupf17UnBw\n    '6FwEmbPo3d3USlMzuulT69',\n    '2swZ0X1njeU32SNJeBKIfW',\n    '1dZe54pxTPI1XsISVTR6ns',\n    '2dy3TKVDEbIeWxeIb8JWqZ',\n    '19CAKZdXVNyZrfmF60RAj3',\n    '0hOpiCYtwEYqenDr8ME31H',\n    '7hLYOkbsngrNAcIXbXfsQu',\n    '1iLv1ieT9BZ3qsti9yTCnG',\n    '0M9Qr6K4wfoGUDBDgSzXgf',\n    '0HDHY6RSHHG2ZTE0cMT4GJ',\n    '4iTtqoImVortyy7MHw51Cv',\n    '4SqiBk88oTJpVOzQYly9Zi',\n    '2MioxSroS0g1mi24LLfcnq',\n    '0muI8DpTEpLqqibPm3sKYf',\n    '709hAukJxapqTU9VhsiQm0',\n    '7a6htfBLgGUd4e36u2ISrx',\n    '1WbXIpiGBJkCiv3hn40iPB',\n    '6I86RF3odBlcuZA9Vfjzeq',\n    '217bRMES4HVbPdUe8l8ECN',\n    '6rXvMpWJbTyhSrVWye7jPE',\n    '4Xqpt53kWML7eTObGxQ43i',\n    '3fPMRb2gcFTZcYmR0bXnDc',\n    '6BdAwMv1YorLfkBWlE493X',\n    '3cZhoRYQFqJ8B9z0AN9gJB',\n    '7sasRSZNmUPaHXLWndC8oj',\n    '2kcc5humLS6PKOI9rwvXex',\n    '3iGjLTDqokSuf6yYI83wzi',\n    '31q1SLZZJZkdXENljyG1xC',\n    '6CKlQHQIxhWtq7MnEJ6QCz',\n    '0wDEs6WvqDHq4XJZC0dHhO',\n    '0DQd0tWurMHUAv0cMnDELH',\n    '65H6t1WQBim6q93yM8fEwn',\n    '4dz2XW41AQTMn0bFKzaqsr',\n    '03jN3MZ569uT3bzoh3pN5v',\n    '4OpFR4sz9kxF983pKdnx1k',\n    '0KBfGeUKLjNaernyUDUqgM',\n    '1ePEbbeWx3scydfir7HBcq',\n    '4AX0mPH9LnPtRPU7qYqTHW',\n    '7oJ5gMtXIjVyx9plzoFkHU',\n    '61LvtpZIualXhxhu8xkC2m',\n    '1ehvUn5ei1Ef4XiK7Q32rs',\n    '0vOU4wzq4KOLZia5bOMix0',\n    '6wwRmRSc9OP9RdovSj7CZi',\n    '6pMaJqcSPcB2JQNj23wJLN',\n    '1w2cCY4iJ50Pm9qtwt310x',\n    '4EzRYdHmOmUB7KXz1Dq8Ny',\n    '7f7hBMVpdt2KGVOMHCGQnl',\n    '3QeU2rcc5buv0B9VA0gRKH',\n    '6mmza1GaPukLZ7tDYWcKj1',\n    '61syCDsbd59CNRb9bEN32U',\n    '6PqaUk1aS7KXHXBr8iELKb',\n    '1dazXPzmgBB7sNxodglb1l',\n    '5vY9L2lWnaCXwecxaUigps',\n    '18hnXK4HWm3BxT8QijiJVO',\n    '5ak2OdhjNeZrksibKWG19G',\n    '42jedyDXAZydzL3OrslfUp',\n    '1sRLHqXAohDI070tWU6QIS',\n    '7CLP5aEc8SAYdhBqy2Zwjr',\n    '4NfwBgmzmzx8WpyIy9C6p7',\n    '1o5xQ4v5K9RqsU5xVbkDY6',\n    '4pJDYk0CnZoydOy6qzqxJW',\n    '1PL6AwnzEDWjKErmFgDgoT',\n    '3vAPw05pWZ3uPI1SbqG1vv',\n    '1dN6LzonVuFgQ90x4Ttrse',\n    '0OgX5NA7KFx8FCr5W0HYl9',\n    '1sjP5ywDibuwKax81gHCTG',\n    '3P3KYALsULoYB2D8qIuu2A',\n    '6HI59DNB97wXvOyP3kWdyE',\n    '6IfMD01z39P15HKezjdaMP',\n    '44ayrb3kbN6jwX9WWdoTcV',\n  ],\n  merengue: [\n    // Songs from https://open.spotify.com/user/spotify/playlist/37i9dQZF1DWVAa4Dwc5f7L?si=T1vDIlH0TuiSonrvdNX4HA\n    '2gT8OWcAgPg0yawg1qw4Nv',\n    '05fjQ7QDmLNxhGZvWwqHvH',\n    '3lUWGTKZuzP2NmGUwe1ox8',\n    '7sYp72BQkl2HxgPX3eeQW0',\n    '27bYvOSXnVkJEbycstEkR6',\n    '1ZWHHugA5Zl47mhEuCdeoT',\n    '0UnJphaDGpljP59lXRMaiE',\n    '7IlywUbjL6TBFQyAzCqOsf',\n    '0v1LHKfY09iflWGxTYL6qW',\n    '5NDZ8iNl6Q8KvZthfzYLsZ',\n    '0iZzWrpdwwFrynCW0bmyVe',\n    '3mO4W4lB8wDrQ0UE3dz4gh',\n    '3T4QCjtq7USCFlaOotam9Y',\n    '5HaJFkq7DEQ6QMaj0wwI7Z',\n    '1MVJppKg8rGNtDuy4YKWME',\n    '2ltjgZUx2DgxdYGxuyhNAd',\n    '01PPF7e3AD0LE3V9DTDURP',\n    '7reg3cRS3uPi326LD1F3e5',\n    '0WzWqQlZBzxgzVhm8Ep4CX',\n    '3Dxxf8mFAQg8MRcsCZKOKm',\n    '2pGYaMlxkicWR0Pkddlmi8',\n    '00oK3qICo8tnl1WN3ah5aD',\n    '5bpQBpeGQ0vRYs5JTGqR1t',\n    '13PqqV8pIb6XpdZ85CACxF',\n    '6ZOZW00i9w8wwfwZtpreZI',\n    '4UHi2puJF8VEdpC4AJfKku',\n    '0zDy3gddxKzHvOqbfryNg9',\n    '3srURD7HBktaD14VKzctR4',\n    '4u6DLFZrXINev3s4IfDobf',\n    '2zPWfNLVf6rObUn27LKlLy',\n    '66Zw21Bjq8jppl6BrOv1JZ',\n    '6Aqtgsk7nzqAXird9otVEe',\n    '2qlsW9JoDmXNyM7odbFxmn',\n    '6hFhxzvpcWmtDJre0ejXEj',\n    '6WVdJyM1kF6SGrLERsiM1a',\n    '5w8uBAoUDhjGab0EACmmaO',\n    '47nD9EtDtUORYiLPDY4DeI',\n    '7Losbk8sx6RuMCq4Rp1E8M',\n    '6BN6upiyMThT7WtgdQZzZB',\n    '3htW78fd7ocb9rrgnXOLjk',\n    '6qf6WInODgkkK4503iSea5',\n    '6uDRMte0V2h22GZ24TLafo',\n    '4T8nmzARtOIVPuYJ0fvvMX',\n    '5fAlFBYi2rLMdvaRF5PFs0',\n    '392fx2nlTxr8VrMUU9ybqi',\n    '3fO9MbNQQGMtVzyLGwtxRd',\n    '0HXa7KKhJdwU5ypGHvwzBw',\n    '1xu6ahswvBgOe8V7DFHhPC',\n    '1oInQX1RuH1TcHuDv8Gvw3',\n    '5s9qThhS2o3TommmmcmoqU',\n  ],\n  kizomba: [\n\n    // Songs from https://open.spotify.com/user/carloncho-30/playlist/3o9uOgxyrM8vRI53yfkNxY?si=kAc-En-RSju5SGVILTs_jQ\n    '7k6GtIlNKrWcBPadpWGIau',\n    '0fbuZJyu6gyHJXruk0vGkz',\n    '3bsocdNop8BRU7xUe91ZO5',\n    '79pSYGwwdS59svr4Zj8bkO',\n    '0M0S7wJ8qtvHssRkytuRjt',\n    '1zmgXgjQBm9cWcNN5f0cwf',\n    '7x2U8a8ltt9hLBZINnbb5d',\n    '1HmpJAEanU06DdSwxNwFO8',\n    '7dCbLzLWVcYdOKmbk6X5Wj',\n    '3M9XQDFTVjSigY65uG2noK',\n    '1jAcTNZgAVIG5R8epBytaW',\n    '3t2axM2WR6Tyy5lQ60H3DP',\n    '37LhMIzhMkMVVjwJjuKXh0',\n    '3f68uxYfcFipceVEqyqoQo',\n    '0fFYQpXcySoP1aTAesmNTO',\n    '0jmwFUYbHEqPY60yeJIGvT',\n    '1WPWKPJTITG97hvpBFtmpL',\n    '709GVlO1GNZQPOxLXQi3PO',\n\n    // Songs from https://open.spotify.com/user/salsero85il/playlist/5Y9VfrCFt0NgEmyjTVseWr?si=Sf1I0G2XQvmgUDoyoGkWKQ\n    '6PhXswbZFwFlGWiyCuNx1y',\n    '7t1VAARhqmYg30l5OgnUcw',\n    '1Xx1zfcvWMgin1mA8ZPyjv',\n    '00lfmKuo5NCp0LC61FLjPU',\n    '2K3hYYDX6ueaPy403PJqi2',\n    '0qN0K23Us6ozC5CL6q0uAL',\n    '6pRla6fggbVFdsp5jUTuJx',\n    '1AuCWhqJ4vPic3b59zjUpI',\n    '7rDJZ9VmZEhvi1sgePKFKy',\n    '1CyFiX0xKRBNm8kGmfSFLt',\n    '5gN25z7YcmTSEOF65f9K23',\n    '3Rl787jeOJZ0qcR05PBSks',\n    '1WPWKPJTITG97hvpBFtmpL',\n    '6VTzUSp0U0S1Jw30p2yn4Z',\n    '3uRgviLV9EsljL5wVcB24w',\n\n    // Songs from https://open.spotify.com/user/spotify/playlist/37i9dQZF1DX1l6qs3gcM4U?si=XoJN97acQVeBE4ot5ChbQw\n    '0yK1An55fUL6ZgYzWqb3UX',\n    '1xb4uv25MokAY9xos31WXL',\n    '3y8Un4QcNTLwAIIgOroXzf',\n    '6n2wC4XVCaSVpJMxBPrJMN',\n    '6VmyaG1l5VG69AGLecdqpq',\n    '2Rz27kKIB8LlbjzvyM1utV',\n    '0pnQuPugcSa1anG10jlxkz',\n    '2CV9x25ByU2nmmeHSSn4NX',\n    '78guu2HTRnNgncK0UySeDK',\n    '5ZhYcNNdJMYUkUkFjeuWDI',\n    '3hVuyS22fIMAEvyDx2Nxih',\n    '6bqn1qdCyqWAjS8sAaqzFk',\n    '5nXSUlaOCd4sFVHMyjpaDB',\n    '3AxKlhbCVMwrDbP4laSyys',\n    '5NOwexYooxAsUxHiVXv3Rh',\n    '5u2FrLHKEoKjUMguaffQ0t',\n    '6kNQMH8SSCbwSWRbdYvg4U',\n    '6HkqDpMmTV2IT2I01a9Zp5',\n    '2j1UBahUo1bbMu6rHC5GnE',\n    '7zEFn5PC91OB6KYFjCxMHi',\n    '2Huk69nfKmAqeN4m2S7Ybj',\n    '0ZWU5lJs0mA085Phf8PJA2',\n    '03hnjC8kAVy9tmfgcB0p0y',\n    '720YR0UhybUYFQUU4ZAWwP',\n    '2pSOoP6FLJWeRBxdvhyvkJ',\n    '20pd0IMbN7KC9y0FNOVQK0',\n    '7qeh3o6nW5XCZZjbMCEVWd',\n    '0r2ZBAHKX36U3do2a3E0Vd',\n    '6qhwWPfW7AqhWoJPEjyylb',\n    '7IkiNEEUdZboslsmcFuhtJ',\n    '0oZZUl9SpZ9qQvn6HtxXOR',\n    '49Fu8EcEOZ9OnpM1XpPpyU',\n    '1d8RXKUyIQkgrZel7CvFV0',\n    '3T2ag3TOeD3IDqVVfl9ilU',\n    '4rbmWqxIAQpr5CPVfJ1O7J',\n    '101bSnuKjwls52XChDbfvg',\n    '6eD6PhPI0r20NQkbtg8Ywb',\n    '2ieA58j9Fsuo35Gwa6oX8P',\n    '0RKqylCDwg0Lzq8Stu266U',\n    '4nPEwC4QmSEJFI3CJL9e4b',\n    '1iRDn08Im0yWFH1b7oZ6E5',\n    '24wV7K8ryMHWDoseisRafk',\n    '6EMvAQTdJ0Xs7XV5D5dOun',\n    '1F1EJj1aVtbeI0y0hcFtRh',\n    '2axmBwJacXBbSqvVbxtNzY',\n    '46Kt8G76lbRNkGt4zxCFrp',\n    '5cw7KhORjRNFEP5Yyfs98O',\n    '5hIY2jJsMtrMQxW9ivn809',\n    '0WKVGkGPq8NtuLSSQUUu8X',\n    '235N5XR969xiEa5LvjKheT',\n    '5gM4UYTTTcVyg7KsPAbyGR',\n    '3JtkjYRgX5kY2aK5WwYjSk',\n    '4tb70HZ8PwboF7aGGVBl1I',\n    '1AuCWhqJ4vPic3b59zjUpI',\n    '4vGrg4XZcLaGvhRpAPKdnc',\n    '3LV7JsBzte182GK1p6wOUX',\n    '4MWpwncU5J32siqYoMJXPp',\n    '25JonxVTCZOIul9uyv3ff6',\n    '30GRqeKxTuZQ1JEeCvHJKY',\n    '77fXpodJPRKqvnzDiMYkAj',\n    '0WP4sAf9JKYvy1neTliv5C',\n    '7JoecvZbqyl6yM9j0cUgxr',\n    '1Rqauh63hRo1A201F6lvH7',\n    '7qWszdYQHJUXLmlmDgWyqp',\n    '4SDnHKQfewFoUA61Q9rojm',\n    '5PhrhizCs4VCuFjJPvhI5v',\n    '5koelUYXOtUwFvRvuaNu2n',\n    '3ooG7GI5gSSROggAE2pnji',\n    '08W33tq3AxN2RtbQGNxrBa',\n    '6BLLoHOQqY3rOpMoaO6yHv',\n    '0YOLLYNnFbOz0xagmru0SD',\n    '3HjUVOsrtf2fkJRXaXzhkO',\n    '2eWly1qDvIMnrV91WGvAzX',\n    '2qNtAzgJYODcFPDskUAzE0',\n    '4dOY2bDFu1AWr87MUd09Zh',\n  ],\n  reggaeton: [\n    // Songs from https://open.spotify.com/user/spotify/playlist/37i9dQZF1DWY7IeIP1cdjF?si=HIiBBetPRVallXrhVS-7Kw\n    '6RyaV7owmVU6fzEPE17sF1',\n    '6mAN61JH0dzyZpWslS11jy',\n    '4AjWbAwRpxk2worpjNH5CS',\n    '5099x34vBakWpGkHourFxP',\n    '2ksOAxtIxY8yElEWw8RhgK',\n    '59s0s39NFWScuHDbHytI14',\n    '3jbT1Y5MoPwEIpZndDDwVq',\n    '7rknFhrVDyxzTJkPSf7LoW',\n    '2TH65lNHgvLxCKXM3apjxI',\n    '6pNjmMB8FTMEcqGSgs7Mji',\n    '1tpbAGsGpZee5jDHMcLrUJ',\n    '3KekO5WUfJsh7kYU9o2w50',\n    '0fea68AdmYNygeTGI4RC18',\n    '6Y4PDQv4XjYjHLeLmvyOt0',\n    '65HT0L2eAtvbH56XrJqPbf',\n    '1ndyl3wJCFs872XZ3ztPk6',\n    '1ScD7XQYCKmJ3fdNh71lUE',\n    '684EjRHwNsZQ9hCQxL4NYL',\n    '4o1DxRjMCHDwBiOKv88rOl',\n    '5CQzOnFWI0liUblbHYVNge',\n    '1c0hsvHLELX6y8qymnpLKL',\n    '2EEmzqzM70CybVspgM7YRT',\n    '2kjdTPSRPS9mVfRlaenjsf',\n    '2B94bbI1a4LyBpK1439oP7',\n    '6Y6YC93R1r0CISm5iC4j27',\n    '2DFn7QiaiaNNWXuWLABatP',\n    '3J1zbyaI1m4t8oRGgF56oi',\n    '3dWpRjCmaHbroNahuSeX11',\n    '1GBLO0NFODuL31A5fgw0uR',\n    '1KdwnsWOvhM53vezy5ROuf',\n    '1sD32hk8V2vR4ME7M0rPT5',\n    '6K5BsR04ijf3FHNzjbaagD',\n    '0xkUr72eFk4GjSRoEHOyfD',\n    '53uKGbcMjEc2gIWbfmvpdS',\n    '1aUGxXCz9QimNkKeiJtzZ7',\n    '25ZAibhr3bdlMCLmubZDVt',\n    '3TTragde5roTvwS2caAQOc',\n    '6ycsFSUUgyOSZiz3P2o1pT',\n    '4NLcgBskZkUYgpAVQF0sNI',\n    '5lFl0Aksww4t4CGiYYtpZz',\n    '7pxL0DzPpCjjcdfQccvnus',\n    '5CGFApNEqgMcoKo6Q4KJ3g',\n    '7DOh0tBGnyMt6C5OO7o8Yq',\n    '7fTsw0IKbbPDN19keS32tF',\n    '04x4Urpge2kG9uDGdHRsdc',\n    '5suqjbw9bF0T1X3HU1oG1v',\n    '0a41S6Hf3njfUbQTZyxWDq',\n    '5uVgsAzjO6eJR06VPrqUga',\n    '67OKX8DNYygddabwIjExsp',\n    '54FoR5osiOJtVae7SCdSnq',\n  ],\n};\n\nexport default Songs;\n","const GenreMasterConfig = {\n  salsa: {\n    color: 'red', // Color for buttons etc\n    order: 0, // Sort order in a list\n    enabled: true, // The default for whether the genre is enabled in the game\n  },\n  bachata: {\n    color: 'orange',\n    order: 1,\n    enabled: true,\n  },\n  merengue: {\n    color: 'green',\n    order: 2,\n    enabled: false,\n  },\n  kizomba: {\n    color: 'indigo',\n    order: 3,\n    enabled: false,\n  },\n  reggaeton: {\n    color: 'pink',\n    order: 4,\n    enabled: false,\n  },\n};\n\nexport default GenreMasterConfig;\n","// Master config of genres and their appearances\nimport _ from 'lodash';\nimport GenreMasterConfig from '../config/Genres';\n\nexport const genreButtonStyle = {\n// Add spacing between buttons in vertical button group\n  marginBottom: '10px',\n  borderRadius: '10px',\n};\n\nexport function genreColor(genre) {\n  return _.get(GenreMasterConfig, [genre, 'color'], 'secondary');\n}\n\nexport function genreOrder(genre) {\n  return _.get(GenreMasterConfig, [genre, 'order'], Number.MAX_SAFE_INTEGER);\n}\n\nexport function sortedGenres(genres = _.keys(GenreMasterConfig)) {\n  return (\n    genres.sort((a, b) => (\n      genreOrder(a) - genreOrder(b)\n    ))\n  );\n}\n\nexport function genreIsEnabledDefault() {\n  return _.mapValues(GenreMasterConfig, (genre) => (genre.enabled));\n}\n","/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Col,\n  Container,\n  Row,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { withTranslation } from 'react-i18next';\nimport SpotifyPlayButton from './SpotifyPlayButton';\nimport Songs from '../config/Songs';\nimport * as Genres from '../util/GenreUtils';\n\nclass PlayScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spotifyUri: '',\n      genre: '',\n      isLoaded: false,\n    };\n\n    this.answerButtons = this.answerButtons.bind(this);\n  }\n\n  componentDidMount() {\n    // First randomly choose a genre\n    const genre = _.sample(this.props.enabledGenres());\n    const spotifyUri = _.sample(_.uniq(Songs[genre]));\n\n    this.setState(\n      {\n        spotifyUri,\n        genre,\n        isLoaded: true,\n      },\n    );\n  }\n\n  answerButtons() {\n    // eslint-disable-next-line react/prop-types\n    const { t } = this.props;\n    const enabledGenres = this.props.enabledGenres();\n\n    const buttons = enabledGenres.map((genre) => (\n      <Button\n        key={`${genre} answer button`}\n        style={Genres.genreButtonStyle}\n        color={Genres.genreColor(genre)}\n        size=\"lg\"\n        onClick={() => this.checkAnswer(genre)}\n      >\n        {t(_.startCase(genre))}\n      </Button>\n    ));\n\n    const buttonGroup = <ButtonGroup vertical>{buttons}</ButtonGroup>;\n\n    return buttonGroup;\n  }\n\n  checkAnswer(answer) {\n    this.props.handleGameState(\n      'finished',\n      {\n        playerWon: answer === this.state.genre,\n        lastGenre: this.state.genre,\n        lastSpotifyUri: this.state.spotifyUri,\n      },\n    );\n  }\n\n  render() {\n    // eslint-disable-next-line react/prop-types\n    const { t } = this.props;\n    if (this.state.isLoaded) {\n      return (\n        <Container>\n          <Row>\n            <Col>\n              <h2>{t('What type of song is playing?')}</h2>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {this.answerButtons()}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <SpotifyPlayButton spotifyUri={this.state.spotifyUri} tiny />\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n\n    return <></>;\n  }\n}\n\nPlayScreen.propTypes = {\n  handleGameState: PropTypes.func.isRequired,\n  enabledGenres: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(PlayScreen);\n","import React from 'react';\nimport _ from 'lodash';\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport SpotifyPlayButton from './SpotifyPlayButton';\n\nfunction GameOverScreen({\n  handleGameState,\n  playerWon,\n  lastGenre,\n  lastSpotifyUri,\n}) {\n  const { t } = useTranslation();\n  let outputMessage;\n  let buttonColor;\n  if (playerWon) {\n    outputMessage = 'correct';\n    buttonColor = 'success';\n  } else {\n    outputMessage = 'wrong';\n    buttonColor = 'danger';\n  }\n\n  const lastGenreName = t(_.startCase(lastGenre));\n  const lastGenreMessage = t('answerFeedback', { genre: lastGenreName });\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h2>{t(outputMessage)}</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button color={buttonColor} size=\"lg\" onClick={() => handleGameState('playing')}>{t('Play Again!')}</Button>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: '20px' }}>\n        <Col>\n          <h6><i>{lastGenreMessage}</i></h6>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <SpotifyPlayButton spotifyUri={lastSpotifyUri} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nGameOverScreen.propTypes = {\n  handleGameState: PropTypes.func.isRequired,\n  playerWon: PropTypes.bool.isRequired,\n  lastSpotifyUri: PropTypes.string.isRequired,\n  lastGenre: PropTypes.string.isRequired,\n};\n\nexport default GameOverScreen;\n","/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Col,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Row,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { withTranslation } from 'react-i18next';\nimport * as Genres from '../util/GenreUtils';\n\nclass OptionsModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isModalOpen: false,\n      genreButtonIsEnabled: this.props.genreIsEnabled,\n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.optionButtons = this.optionButtons.bind(this);\n    this.handleOptionButtonClick = this.handleOptionButtonClick.bind(this);\n    this.resetModal = this.resetModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState(\n      (prevState) => ({ isModalOpen: !prevState.isModalOpen }),\n    );\n  }\n\n  handleSubmit() {\n    this.toggleModal();\n    this.props.setGenreIsEnabled(this.state.genreButtonIsEnabled);\n  }\n\n  handleOptionButtonClick(genre) {\n    this.setState(\n      (prevState) => {\n        const newGenreButtonIsEnabled = {\n          ...prevState.genreButtonIsEnabled,\n          [genre]: !prevState.genreButtonIsEnabled[genre],\n        };\n\n        // Only update if at least one genre remains enabled\n        if (_.includes(newGenreButtonIsEnabled, true)) {\n          return ({ genreButtonIsEnabled: newGenreButtonIsEnabled });\n        }\n\n        return null;\n      },\n    );\n  }\n\n  optionButtons() {\n    // eslint-disable-next-line react/prop-types\n    const { t } = this.props;\n\n    const buttons = Genres.sortedGenres().map((genre) => (\n      <Button\n        className={this.state.genreButtonIsEnabled[genre] ? '' : 'disabled'}\n        key={`${genre} answer button`}\n        style={Genres.genreButtonStyle}\n        color={Genres.genreColor(genre)}\n        size=\"lg\"\n        onClick={() => this.handleOptionButtonClick(genre)}\n        outline={!this.state.genreButtonIsEnabled[genre]}\n      >\n        {t(_.startCase(genre))}\n      </Button>\n    ));\n\n    const buttonGroup = <ButtonGroup vertical>{buttons}</ButtonGroup>;\n\n    return buttonGroup;\n  }\n\n  resetModal() {\n    this.setState({ genreButtonIsEnabled: this.props.genreIsEnabled });\n  }\n\n  render() {\n    // eslint-disable-next-line react/prop-types\n    const { t } = this.props;\n\n    return (\n      <Container style={{ marginTop: '10px' }}>\n        <Row>\n          <Col>\n            <Button color=\"link\" onClick={this.toggleModal}>{t('Options')}</Button>\n            <Modal\n              isOpen={this.state.isModalOpen}\n              size=\"sm\"\n              centered\n              toggle={this.toggleModal}\n              onClosed={this.resetModal} // Don't want genre buttons to persist once modal closes\n            >\n              <form className=\"App\" onSubmit={this.handleSubmit}>\n                <ModalHeader>{t('Choose Genres')}</ModalHeader>\n                <ModalBody>\n                  <Container fluid>\n                    <Row>\n                      <Col>\n                        {this.optionButtons()}\n                      </Col>\n                    </Row>\n                  </Container>\n                </ModalBody>\n                <ModalFooter className=\"no-border\">\n                  <Container fluid>\n                    <Row className=\"justify-content-center\">\n                      <Col>\n                        <Button color=\"primary\" onClick={this.handleSubmit}>{t('Done')}</Button>\n                      </Col>\n                    </Row>\n                  </Container>\n                </ModalFooter>\n              </form>\n            </Modal>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nOptionsModal.propTypes = {\n  genreIsEnabled: PropTypes.shape({}),\n  setGenreIsEnabled: PropTypes.func.isRequired,\n};\n\nOptionsModal.defaultProps = {\n  genreIsEnabled: {},\n};\n\nexport default withTranslation()(OptionsModal);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Col,\n  Container,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Row,\n  UncontrolledButtonDropdown,\n} from 'reactstrap';\nimport { IoMdGlobe } from 'react-icons/io';\nimport _ from 'lodash';\n\n\nfunction LanguageSelector() {\n  const { i18n } = useTranslation();\n  const currentLanguage = i18n.language;\n  const languageCodeToName = {\n    en: 'English',\n    es: 'Español',\n    he: 'עברית',\n    jp: '日本語',\n    zhcn: '中文（简体）',\n    zhhk: '中文（繁體）',\n  };\n\n  const dropDownItems = _.keys(languageCodeToName).map((code) => (\n    <DropdownItem\n      onClick={() => i18n.changeLanguage(code)}\n      key={`${code} DropDownItem`}\n    >\n      {languageCodeToName[code]}\n    </DropdownItem>\n  ));\n\n  return (\n    <Container style={{ marginTop: '40px' }}>\n      <Row>\n        <Col>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color=\"link\" caret size=\"sm\" style={{ color: 'gray' }}>\n              <IoMdGlobe />\n              {` ${languageCodeToName[currentLanguage]}`}\n            </DropdownToggle>\n            <DropdownMenu>\n              {dropDownItems}\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default LanguageSelector;\n","/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport _ from 'lodash';\nimport StartScreen from './StartScreen';\nimport PlayScreen from './PlayScreen';\nimport GameOverScreen from './GameOverScreen';\nimport OptionsModal from './OptionsModal';\nimport LanguageSelector from './LanguageSelector';\nimport * as Genres from '../util/GenreUtils';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gameState: 'starting',\n      playerWon: false,\n      genreIsEnabled: Genres.genreIsEnabledDefault(),\n      lastSpotifyUri: '',\n      lastGenre: '',\n    };\n\n    this.handleGameState = this.handleGameState.bind(this);\n    this.setGenreIsEnabled = this.setGenreIsEnabled.bind(this);\n    this.enabledGenres = this.enabledGenres.bind(this);\n  }\n\n  setGenreIsEnabled(genreIsEnabled) {\n    this.setState({ genreIsEnabled });\n  }\n\n  enabledGenres() {\n    return (\n      Genres.sortedGenres(\n        _.keys(\n          _.pickBy(this.state.genreIsEnabled, _.identity),\n        ),\n      )\n    );\n  }\n\n  handleGameState(\n    gameState,\n    {\n      playerWon = this.state.playerWon,\n      lastGenre = this.state.lastGenre,\n      lastSpotifyUri = this.state.lastSpotifyUri,\n    } = {},\n  ) {\n    this.setState(\n      {\n        gameState,\n        playerWon,\n        lastGenre,\n        lastSpotifyUri,\n      },\n    );\n  }\n\n\n  render() {\n    if (this.state.gameState === 'playing') {\n      return (\n        <>\n          <PlayScreen\n            handleGameState={this.handleGameState}\n            enabledGenres={this.enabledGenres}\n            key={JSON.stringify(this.state.genreIsEnabled)}\n            /* OptionsModal can change this.state.genreIsEnabled\n               When this happens we want PlayScreen to be reset.\n               Key therefore uses this.state.genreIsEnabled because\n               when a key changes, React will create a new component instance\n               rather than update the current one (see link below)\n               https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-controlled-component */\n          />\n          <OptionsModal\n            genreIsEnabled={this.state.genreIsEnabled}\n            setGenreIsEnabled={this.setGenreIsEnabled}\n          />\n          <LanguageSelector />\n        </>\n      );\n    }\n\n    if (this.state.gameState === 'finished') {\n      return (\n        <>\n          <GameOverScreen\n            handleGameState={this.handleGameState}\n            playerWon={this.state.playerWon}\n            lastSpotifyUri={this.state.lastSpotifyUri}\n            lastGenre={this.state.lastGenre}\n          />\n          <LanguageSelector />\n        </>\n      );\n    }\n\n    return (\n      <>\n        <StartScreen handleGameState={this.handleGameState} />\n        <OptionsModal\n          genreIsEnabled={this.state.genreIsEnabled}\n          setGenreIsEnabled={this.setGenreIsEnabled}\n        />\n        <LanguageSelector />\n      </>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactGA from 'react-ga'; // Google Analytics\nimport Game from './Game';\n\nfunction Main() {\n  ReactGA.initialize('UA-150417728-1');\n  ReactGA.pageview('/main');\n  return (\n    <div className=\"App minHeight100vh\">\n      <Game />\n    </div>\n  );\n}\n\nexport default Main;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport Main from './components/Main';\nimport './scss/App.scss';\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './scss/custom.scss';\nimport './i18n';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}